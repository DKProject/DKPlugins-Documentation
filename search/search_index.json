{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"dkcoins/developer/","text":"Getting Started \u00b6 DKCoins contains a large and powerful API that is easy to use. The api is very flexible and gives you the possibility to fully interact with DKCoins. You don't need to worry about anything else, the DKPerms api interface will handle everything for you. Thread safety All operations in DKCoins are totally thread safety and designed for asynchronously usage. Storage & Synchronisation operations DKCoins offers you a simple api to create, modify, update and delete currency and bank account and other things. You have not to deal with saving or synchronizing data, DKPerms is automatically handling those things in the background. Javadocs \u00b6 The full Api documentation is available as Javadocs here . This wiki covers only basic examples, the api is much bigger and offers many more possibilities. Dependency \u00b6 DKCoins is built with the Maven build tool and has its own repository (Public available). Repository Maven <repository> <id> pretronic </id> <url> https://repository.pretronic.net/repository/pretronic/ </url> </repository> Gradle repositories { maven { url \"https://repository.pretronic.net/repository/pretronic/\" } } Dependency Maven <dependency> <groupId> net.pretronic.dkcoins </groupId> <artifactId> dkcoins-api </artifactId> <version> VERSION </version> <scope> compile </scope> </dependency> Gradle dependencies { compile 'net.pretronic.dkcoins:dkcoins-api:VERSION' }","title":"Developer Getting Started"},{"location":"dkcoins/developer/#getting-started","text":"DKCoins contains a large and powerful API that is easy to use. The api is very flexible and gives you the possibility to fully interact with DKCoins. You don't need to worry about anything else, the DKPerms api interface will handle everything for you. Thread safety All operations in DKCoins are totally thread safety and designed for asynchronously usage. Storage & Synchronisation operations DKCoins offers you a simple api to create, modify, update and delete currency and bank account and other things. You have not to deal with saving or synchronizing data, DKPerms is automatically handling those things in the background.","title":"Getting Started"},{"location":"dkcoins/developer/#javadocs","text":"The full Api documentation is available as Javadocs here . This wiki covers only basic examples, the api is much bigger and offers many more possibilities.","title":"Javadocs"},{"location":"dkcoins/developer/#dependency","text":"DKCoins is built with the Maven build tool and has its own repository (Public available). Repository Maven <repository> <id> pretronic </id> <url> https://repository.pretronic.net/repository/pretronic/ </url> </repository> Gradle repositories { maven { url \"https://repository.pretronic.net/repository/pretronic/\" } } Dependency Maven <dependency> <groupId> net.pretronic.dkcoins </groupId> <artifactId> dkcoins-api </artifactId> <version> VERSION </version> <scope> compile </scope> </dependency> Gradle dependencies { compile 'net.pretronic.dkcoins:dkcoins-api:VERSION' }","title":"Dependency"},{"location":"dkcoins/plugin-setup/installation/","text":"","title":"Installation"},{"location":"dkcoins/plugin-usage/frequently-asked-questions/","text":"Frequently Asked Questions \u00b6 This page contains some questions which are frequently asked about DKCoins. Before you ask a question in our support, please check this page and make sure that the question is not already answered.","title":"Frequently Asked Questions"},{"location":"dkcoins/plugin-usage/frequently-asked-questions/#frequently-asked-questions","text":"This page contains some questions which are frequently asked about DKCoins. Before you ask a question in our support, please check this page and make sure that the question is not already answered.","title":"Frequently Asked Questions"},{"location":"dkcoins/plugin-usage/placeholders/","text":"Placeholders \u00b6 DKCoin offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKCoins placeholders are available in all McNative supported placeholder sources (PlaceholderAPI). Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] %dkcoins_balance_[currency]% \u00b6 This placeholder shows the balance of the player bank account for the specified currency. If the currency is not given, the default currency will be used. %dkcoins_player_ balance [currency]% \u00b6 This placeholder shows the balance of the specified player bank account for the specified currency. If the currency is not given, the default currency will be used. %dkcoins_top_ name [currency]% \u00b6 This placeholder shows the name of the bank account at the specified rank position. If the currency is not given, the default currency will be used. %dkcoins_top_ balance [currency]% \u00b6 This placeholder shows the balance of the bank account at the specified rank position. If the currency is not given, the default currency will be used. %dkcoins_toppos_[currency]% \u00b6 This placeholder shows the rank position of the player bank account in the specified currency . If the currency is not given, the default currency will be used. %dkcoins_bank_ balance [currency]% \u00b6 This placeholder shows the balance of the specified bank account for the specified currency. If the currency is not given, the default currency will be used.","title":"Placeholders"},{"location":"dkcoins/plugin-usage/placeholders/#placeholders","text":"DKCoin offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKCoins placeholders are available in all McNative supported placeholder sources (PlaceholderAPI). Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"Placeholders"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_balance_currency","text":"This placeholder shows the balance of the player bank account for the specified currency. If the currency is not given, the default currency will be used.","title":"%dkcoins_balance_[currency]%"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_player_balancecurrency","text":"This placeholder shows the balance of the specified player bank account for the specified currency. If the currency is not given, the default currency will be used.","title":"%dkcoins_player_balance[currency]%"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_top_namecurrency","text":"This placeholder shows the name of the bank account at the specified rank position. If the currency is not given, the default currency will be used.","title":"%dkcoins_top_name[currency]%"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_top_balancecurrency","text":"This placeholder shows the balance of the bank account at the specified rank position. If the currency is not given, the default currency will be used.","title":"%dkcoins_top_balance[currency]%"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_toppos_currency","text":"This placeholder shows the rank position of the player bank account in the specified currency . If the currency is not given, the default currency will be used.","title":"%dkcoins_toppos_[currency]%"},{"location":"dkcoins/plugin-usage/placeholders/#dkcoins_bank_balancecurrency","text":"This placeholder shows the balance of the specified bank account for the specified currency. If the currency is not given, the default currency will be used.","title":"%dkcoins_bank_balance[currency]%"},{"location":"dkcoins/plugin-usage/support/","text":"Support \u00b6 DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ Bug reports \u00b6 Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. __**Template:**__ **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit (CloudNet) **Storage**: SQLite **Server Version / Build**: 1402 **Client Version**: 1.8 **Logs / Images** gist.github.com (Recommended) hastebin.com imgur.com/upload **Description** A clear description of the bug and when he occurs. **To Reproduce** What we have to do, to trigger the bug? 1. Ban a player with /ban 2. Join the server Suggestions \u00b6 If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion in the #suggestions channel on our Discord server. Make sure your suggestion is understandable and that the following template is used. __**Template:**__ **Project**: DKBans | DKPerms | etc. **Description:** A detailed description of the suggestion. **Usage: ** The usage, for what you can use this feature and why it is so useful. **Example:** A example, how this feature should work.","title":"Support"},{"location":"dkcoins/plugin-usage/support/#support","text":"DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ","title":"Support"},{"location":"dkcoins/plugin-usage/support/#bug-reports","text":"Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. __**Template:**__ **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit (CloudNet) **Storage**: SQLite **Server Version / Build**: 1402 **Client Version**: 1.8 **Logs / Images** gist.github.com (Recommended) hastebin.com imgur.com/upload **Description** A clear description of the bug and when he occurs. **To Reproduce** What we have to do, to trigger the bug? 1. Ban a player with /ban 2. Join the server","title":"Bug reports"},{"location":"dkcoins/plugin-usage/support/#suggestions","text":"If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion in the #suggestions channel on our Discord server. Make sure your suggestion is understandable and that the following template is used. __**Template:**__ **Project**: DKBans | DKPerms | etc. **Description:** A detailed description of the suggestion. **Usage: ** The usage, for what you can use this feature and why it is so useful. **Example:** A example, how this feature should work.","title":"Suggestions"},{"location":"dkcoins/plugin-usage/commands/","text":"Commands \u00b6 This page describes all available commands to operate DKCoins from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ... General commands \u00b6 These commands are used to operate DKCoins on your network or server. /dkcoins /dkcoins info /dkcoins admin /dkcoins migrate","title":"Commands"},{"location":"dkcoins/plugin-usage/commands/#commands","text":"This page describes all available commands to operate DKCoins from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ...","title":"Commands"},{"location":"dkcoins/plugin-usage/commands/#general-commands","text":"These commands are used to operate DKCoins on your network or server. /dkcoins /dkcoins info /dkcoins admin /dkcoins migrate","title":"General commands"},{"location":"dkcoins/plugin-usage/commands/bank-commands/","text":"Bank Commands \u00b6 This page describes the usage and permissions of the Bank commands. The bank command always starts with /bank <name> , while <name> is the name of the bank. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /bank [list] /bank <name> /bank <name> create <accountType> /bank <name> delete /bank <name> settings <setting> <value> /bank <name> transfer <receiver> <amount> [currency] /bank <name> exchange <source> <target> <amount> /bank <name> member /bank <name> limit /bank <name> statement /bank [list] \u00b6 Permission: dkcoins.command.bank This is the base bank command. It lists all your bank accounts. /bank <name> \u00b6 Permission: dkcoins.command.bank This is the base command for a specific bank. It shows you all your account credits with the certain amount. If the bank does not exist, it will be shown in the chat. /bank <name> create <accountType> \u00b6 Permission: dkcoins.command.bank Arguments: <accountType> The account type This command creates a bank with the specific name and account type. Default there are two account types, bank and user , but a user account can't be created manually. /bank <name> delete \u00b6 Permission: dkcoins.command.bank This command deletes a bank of you. You need to be the owner of the specified bank. /bank <name> settings <setting> <value> \u00b6 Permission: dkcoins.command.bank Arguments: <setting> The setting type <value> The value to be changed This command change settings of a bank. Settings: * receivenotifications, boolean value /bank <name> transfer <receiver> <amount> [currency] \u00b6 Permission: dkcoins.command.bank Arguments: <receiver> The receiver bank <amount> The amount to be transferred [currency] currency to be transferred, if not given the default currency will be chosen This command transfer money from a bank to another bank in a specified currency. If the sender bank does not have enough money of the currency, it will not be work. /bank <name> exchange <source> <target> <amount> \u00b6 Permission: dkcoins.command.bank Arguments: <source> The source currency <target> The target currency <amount> The amount to be transferred This command exchanges a specified amount of money from a currency to another specified currency. /bank <name> member \u00b6 Permission: dkcoins.command.bank This command controls the member management of the bank. /bank <name> limit \u00b6 Permission: dkcoins.command.bank This command controls all global bank limits of the bank. /bank <name> statement \u00b6 Permission: dkcoins.command.bank This command shows you all your bank transfers and exchanges.","title":"Bank Commands"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-commands","text":"This page describes the usage and permissions of the Bank commands. The bank command always starts with /bank <name> , while <name> is the name of the bank. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"Bank Commands"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-list","text":"Permission: dkcoins.command.bank This is the base bank command. It lists all your bank accounts.","title":"/bank [list]"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name","text":"Permission: dkcoins.command.bank This is the base command for a specific bank. It shows you all your account credits with the certain amount. If the bank does not exist, it will be shown in the chat.","title":"/bank &lt;name&gt;"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-create-accounttype","text":"Permission: dkcoins.command.bank Arguments: <accountType> The account type This command creates a bank with the specific name and account type. Default there are two account types, bank and user , but a user account can't be created manually.","title":"/bank &lt;name&gt; create &lt;accountType&gt;"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-delete","text":"Permission: dkcoins.command.bank This command deletes a bank of you. You need to be the owner of the specified bank.","title":"/bank &lt;name&gt; delete"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-settings-setting-value","text":"Permission: dkcoins.command.bank Arguments: <setting> The setting type <value> The value to be changed This command change settings of a bank. Settings: * receivenotifications, boolean value","title":"/bank &lt;name&gt; settings &lt;setting&gt; &lt;value&gt;"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-transfer-receiver-amount-currency","text":"Permission: dkcoins.command.bank Arguments: <receiver> The receiver bank <amount> The amount to be transferred [currency] currency to be transferred, if not given the default currency will be chosen This command transfer money from a bank to another bank in a specified currency. If the sender bank does not have enough money of the currency, it will not be work.","title":"/bank &lt;name&gt; transfer &lt;receiver&gt; &lt;amount&gt; [currency]"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-exchange-source-target-amount","text":"Permission: dkcoins.command.bank Arguments: <source> The source currency <target> The target currency <amount> The amount to be transferred This command exchanges a specified amount of money from a currency to another specified currency.","title":"/bank &lt;name&gt; exchange &lt;source&gt; &lt;target&gt; &lt;amount&gt;"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-member","text":"Permission: dkcoins.command.bank This command controls the member management of the bank.","title":"/bank &lt;name&gt; member"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-limit","text":"Permission: dkcoins.command.bank This command controls all global bank limits of the bank.","title":"/bank &lt;name&gt; limit"},{"location":"dkcoins/plugin-usage/commands/bank-commands/#bank-name-statement","text":"Permission: dkcoins.command.bank This command shows you all your bank transfers and exchanges.","title":"/bank &lt;name&gt; statement"},{"location":"dkcoins/plugin-usage/commands/currency-commands/","text":"Currency Commands \u00b6 This page describes the usage and permissions of the Currency commands. The currency command always starts with /currency <name> , while <name> is the name of the currency. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /currency [list] /currency <name> /currency <name> create <symbol> /currency <name> delete /currency <name> edit name <name> /currency <name> edit symbol <symbol> /currency <name> edit exchangeRate <target> <amount> /currency <name> edit exchangeRate <target> disable /currency [list] \u00b6 Permission: dkcoins.command.currency This is the base currency command. It lists all currencies. /currency <name> \u00b6 Permission: dkcoins.command.currency This is the base command for a specific currency. It shows all information about the currency. If the currency does not exist, it will be shown in the chat. /currency <name> create <symbol> \u00b6 Permission: dkcoins.command.currency Arguments: <symbol> The symbol of the bank to be created This command creates a currency with the specific symbol. /currency <name> delete \u00b6 Permission: dkcoins.command.currency This command deletes a currency. /currency <name> edit name <name> \u00b6 Permission: dkcoins.command.currency Arguments: <name> The new name of the currency This command renames the currency to the specified name. /currency <name> edit symbol <symbol> \u00b6 Permission: dkcoins.command.currency Arguments: <symbol> The new symbol of the currency This command changes the symbol of the currency. /currency <name> edit exchangeRate <target> <amount> \u00b6 Permission: dkcoins.command.currency Arguments: <target> The target currency <amount> The change amount as double, for example 1.2 or 2 This command changes the exchange rate to the specified currency. The amount means, how much one amount of the currency into the target currency is. /currency <name> edit exchangeRate <target> disable \u00b6 Permission: dkcoins.command.currency Arguments: <target> The target currency This command disables the exchange into the target currency.","title":"Currency Commands"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-commands","text":"This page describes the usage and permissions of the Currency commands. The currency command always starts with /currency <name> , while <name> is the name of the currency. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"Currency Commands"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-list","text":"Permission: dkcoins.command.currency This is the base currency command. It lists all currencies.","title":"/currency [list]"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name","text":"Permission: dkcoins.command.currency This is the base command for a specific currency. It shows all information about the currency. If the currency does not exist, it will be shown in the chat.","title":"/currency &lt;name&gt;"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-create-symbol","text":"Permission: dkcoins.command.currency Arguments: <symbol> The symbol of the bank to be created This command creates a currency with the specific symbol.","title":"/currency &lt;name&gt; create &lt;symbol&gt;"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-delete","text":"Permission: dkcoins.command.currency This command deletes a currency.","title":"/currency &lt;name&gt; delete"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-edit-name-name","text":"Permission: dkcoins.command.currency Arguments: <name> The new name of the currency This command renames the currency to the specified name.","title":"/currency &lt;name&gt; edit name &lt;name&gt;"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-edit-symbol-symbol","text":"Permission: dkcoins.command.currency Arguments: <symbol> The new symbol of the currency This command changes the symbol of the currency.","title":"/currency &lt;name&gt; edit symbol &lt;symbol&gt;"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-edit-exchangerate-target-amount","text":"Permission: dkcoins.command.currency Arguments: <target> The target currency <amount> The change amount as double, for example 1.2 or 2 This command changes the exchange rate to the specified currency. The amount means, how much one amount of the currency into the target currency is.","title":"/currency &lt;name&gt; edit exchangeRate &lt;target&gt; &lt;amount&gt;"},{"location":"dkcoins/plugin-usage/commands/currency-commands/#currency-name-edit-exchangerate-target-disable","text":"Permission: dkcoins.command.currency Arguments: <target> The target currency This command disables the exchange into the target currency.","title":"/currency &lt;name&gt; edit exchangeRate &lt;target&gt; disable"},{"location":"dkcoins/plugin-usage/commands/general-commands/","text":"General Commands \u00b6 This page describes the usage and permissions of the DKCoins general commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /dkcoins /dkcoins info /dkcoins admin /dkcoins migrate /dkcoins \u00b6 Permission: dkcoins.admin This is the base command of DKCoins. It is use for administrating the whole DKCoins economy system on your network. If you don't have access to this command, the plugin version and author is displayed. /dkcoins info \u00b6 Alias: information, i, version, v Shows information about the current installed plugin, like the version and author. /dkcoins admin \u00b6 Permission: dkcoins.admin Controls the user bank accounts of your server to change the money of specific currencies. /dkcoins migrate \u00b6 Permission: dkcoins.admin Alias: migration, m Arguments: <system> The system to migrate (DKCoinsLegacy, EssentialsX, etc.) Import coins from older dkcoins version or other economy systems.","title":"General Commands"},{"location":"dkcoins/plugin-usage/commands/general-commands/#general-commands","text":"This page describes the usage and permissions of the DKCoins general commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"General Commands"},{"location":"dkcoins/plugin-usage/commands/general-commands/#dkcoins","text":"Permission: dkcoins.admin This is the base command of DKCoins. It is use for administrating the whole DKCoins economy system on your network. If you don't have access to this command, the plugin version and author is displayed.","title":"/dkcoins"},{"location":"dkcoins/plugin-usage/commands/general-commands/#dkcoins-info","text":"Alias: information, i, version, v Shows information about the current installed plugin, like the version and author.","title":"/dkcoins info"},{"location":"dkcoins/plugin-usage/commands/general-commands/#dkcoins-admin","text":"Permission: dkcoins.admin Controls the user bank accounts of your server to change the money of specific currencies.","title":"/dkcoins admin"},{"location":"dkcoins/plugin-usage/commands/general-commands/#dkcoins-migrate","text":"Permission: dkcoins.admin Alias: migration, m Arguments: <system> The system to migrate (DKCoinsLegacy, EssentialsX, etc.) Import coins from older dkcoins version or other economy systems.","title":"/dkcoins migrate"},{"location":"dkperms/","text":"Introduction \u00b6 DKPerms is a high configurable Minecraft permission system with a lot of features and this is the official wiki of the DKPerms project. Here you will find a complete documentation how to administrate, install and setup DKPerms. DKPerms is maintained by Pretronic and was first released in July 2018. DKPerms is a reliable permission system and has been optimized and improved over time. Features \u00b6 Platform & Environment Running on Spigot and BungeeCord Minecraft 1.8 - 1.16 support H2 (SQLite), MySQL, MariaDB, PostgreSQL, MS-SQL and MongoDB support Everything is configurable and customizable Live update over network High performance and caching architecture Permissions Temporary and negative permissions Assign to different scopes Per world permissions Per server permissions Per server group permissions Per custom implementation (e.g. region) Groups Temporary and negative groups Default groups Inheritance groups Custom group types Group priorities for ranking and promotion Tracks for creating group orders Assign to different scopes Per world groups Per server groups Per server group groups Integrations Tablist & Chat integration (live update) Placeholders for PlaceholderAPI Vault permission and chat support CloudNet V2 & V3 support (Multi proxy) Additional features Simplified /rank command for assigning groups /team command for listing your team members. Offline player support Tree based structure Change logging Migration functionality Large developer api Support \u00b6 DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ License \u00b6","title":"Introduction"},{"location":"dkperms/#introduction","text":"DKPerms is a high configurable Minecraft permission system with a lot of features and this is the official wiki of the DKPerms project. Here you will find a complete documentation how to administrate, install and setup DKPerms. DKPerms is maintained by Pretronic and was first released in July 2018. DKPerms is a reliable permission system and has been optimized and improved over time.","title":"Introduction"},{"location":"dkperms/#features","text":"Platform & Environment Running on Spigot and BungeeCord Minecraft 1.8 - 1.16 support H2 (SQLite), MySQL, MariaDB, PostgreSQL, MS-SQL and MongoDB support Everything is configurable and customizable Live update over network High performance and caching architecture Permissions Temporary and negative permissions Assign to different scopes Per world permissions Per server permissions Per server group permissions Per custom implementation (e.g. region) Groups Temporary and negative groups Default groups Inheritance groups Custom group types Group priorities for ranking and promotion Tracks for creating group orders Assign to different scopes Per world groups Per server groups Per server group groups Integrations Tablist & Chat integration (live update) Placeholders for PlaceholderAPI Vault permission and chat support CloudNet V2 & V3 support (Multi proxy) Additional features Simplified /rank command for assigning groups /team command for listing your team members. Offline player support Tree based structure Change logging Migration functionality Large developer api","title":"Features"},{"location":"dkperms/#support","text":"DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ","title":"Support"},{"location":"dkperms/#license","text":"","title":"License"},{"location":"dkperms/defintions/","text":"Definitions \u00b6 This page describes the key definitions and the structure of DKPerms. It is very important that you understand these things before you start using DKPerms. Permissions \u00b6 Every plugin installed on your server usually brings its own permissions, these permissions are required to restrict commands and features to different users and groups. These permissions allow you to control which user has access to a command or feature. The permission node is a sequence of letters and is provided by the respective plugin author. For example, to ban ( /ban dkrieger hacking ) a user with DKBans the permission dkbans.ban is required. Meta \u00b6 The meta is a key value based information that can be set to groups and users. Unlike permissions, the meta contains a value that can be read by another plugin. For example, you might want to display a prefix before the player name in the tab list, so you can set a meta entry with the key prefix and your value. Groups (Permission groups) \u00b6 Usually different players have the same permission. In this case DKPerms has groups, which you can give permissions, metas and other groups, later on you can assign this group to different players. For example, you can create a moderator group, which contains permissions for banning, kicking and teleport. When now a new moderator joins your team, you can easily assign the moderator group to him/her, and he/she will automatically get necessary permissions. Server Groups \u00b6 A server group is a collection of different servers, every server is automatically in a server group the name of the group is the first part of the group separator ( - ) defined in the configuration For example, you have a different SkyWars servers called: * SkyWars-1 * SkyWars-2 * SkyWars-3 The server group for these servers is called SkyWars , if you now need the same permissions on all skywars servers, it is much easier to assign the permission to the server group instead to each server. Scope \u00b6 DKPerms is based on a tree structure, everything in DKPerms (Objects, permissions, groups etc.) belongs to a scope and is only valid for this and all subordinate scopes. This example shows how a tree can look like: Nemspace=Minecraft ServerGroup=Lobby Server=Lobby-1 World=World-1 Server=Lobby-2 If the permission dkbans.ban is assigned to a player on the scope Nemspace=Minecraft\\\\ServerGroup=Lobby the permission is valid on Lobby-1 and Lobby-2 . Permission Object \u00b6 A PermissionObject holds permission data and can be a group, user or a custom type. Objects are registered in DKPerms and assigned to a third-party resource.","title":"Defintions"},{"location":"dkperms/defintions/#definitions","text":"This page describes the key definitions and the structure of DKPerms. It is very important that you understand these things before you start using DKPerms.","title":"Definitions"},{"location":"dkperms/defintions/#permissions","text":"Every plugin installed on your server usually brings its own permissions, these permissions are required to restrict commands and features to different users and groups. These permissions allow you to control which user has access to a command or feature. The permission node is a sequence of letters and is provided by the respective plugin author. For example, to ban ( /ban dkrieger hacking ) a user with DKBans the permission dkbans.ban is required.","title":"Permissions"},{"location":"dkperms/defintions/#meta","text":"The meta is a key value based information that can be set to groups and users. Unlike permissions, the meta contains a value that can be read by another plugin. For example, you might want to display a prefix before the player name in the tab list, so you can set a meta entry with the key prefix and your value.","title":"Meta"},{"location":"dkperms/defintions/#groups-permission-groups","text":"Usually different players have the same permission. In this case DKPerms has groups, which you can give permissions, metas and other groups, later on you can assign this group to different players. For example, you can create a moderator group, which contains permissions for banning, kicking and teleport. When now a new moderator joins your team, you can easily assign the moderator group to him/her, and he/she will automatically get necessary permissions.","title":"Groups (Permission groups)"},{"location":"dkperms/defintions/#server-groups","text":"A server group is a collection of different servers, every server is automatically in a server group the name of the group is the first part of the group separator ( - ) defined in the configuration For example, you have a different SkyWars servers called: * SkyWars-1 * SkyWars-2 * SkyWars-3 The server group for these servers is called SkyWars , if you now need the same permissions on all skywars servers, it is much easier to assign the permission to the server group instead to each server.","title":"Server Groups"},{"location":"dkperms/defintions/#scope","text":"DKPerms is based on a tree structure, everything in DKPerms (Objects, permissions, groups etc.) belongs to a scope and is only valid for this and all subordinate scopes. This example shows how a tree can look like: Nemspace=Minecraft ServerGroup=Lobby Server=Lobby-1 World=World-1 Server=Lobby-2 If the permission dkbans.ban is assigned to a player on the scope Nemspace=Minecraft\\\\ServerGroup=Lobby the permission is valid on Lobby-1 and Lobby-2 .","title":"Scope"},{"location":"dkperms/defintions/#permission-object","text":"A PermissionObject holds permission data and can be a group, user or a custom type. Objects are registered in DKPerms and assigned to a third-party resource.","title":"Permission Object"},{"location":"dkperms/frequently-asked-questions/","text":"Frequently Asked Questions \u00b6 this page contains some questions which are frequently asked about DKPerms. Before you ask a question in our support, please check this page and make sure that the question is not already answered. How can I create a default group? \u00b6 DKPerms handles default groups in its meta. You can set a group as default on the whole network or on a specified server. If you set the meta default to true of a group, all players will automatically gets all permissions of the group, but the group is not directly assigned to the player. If you want set a group to each player when he joined the server, you can set the meta ``defaultAssign to true```, so every new player automatically receives this group. Examples /perms group <group> meta set default true /perms group <group> meta set defaultAsign true /perms group <group> meta set default true world=world-1 In this case the group is only default on world-1","title":"FAQ"},{"location":"dkperms/frequently-asked-questions/#frequently-asked-questions","text":"this page contains some questions which are frequently asked about DKPerms. Before you ask a question in our support, please check this page and make sure that the question is not already answered.","title":"Frequently Asked Questions"},{"location":"dkperms/frequently-asked-questions/#how-can-i-create-a-default-group","text":"DKPerms handles default groups in its meta. You can set a group as default on the whole network or on a specified server. If you set the meta default to true of a group, all players will automatically gets all permissions of the group, but the group is not directly assigned to the player. If you want set a group to each player when he joined the server, you can set the meta ``defaultAssign to true```, so every new player automatically receives this group. Examples /perms group <group> meta set default true /perms group <group> meta set defaultAsign true /perms group <group> meta set default true world=world-1 In this case the group is only default on world-1","title":"How can I create a default group?"},{"location":"dkperms/license/","text":"License \u00b6 DKPerms is licensed with Pretronic Premium Resource License (PPR) , see the exact license terms below. Translated License \u00b6 This is only a translation of the original license below, only the original one is valid. Pretronic Premium Resource License (PPR) Definition This license applies to the Minecraft plugin DKPerms, which is distributed via MCNative.org by Pretronic (Davide Wietlisbach and Philipp Elvin Friedhoff). Use You are entitled to use one copy of this software, provided you have purchased a license through one of our official sales outlets. The license is valid for the respective specified period of time. **Guidelines** <br /> This software may not be used for racist, offensive, right-wing, fraudulent or other Illegal purposes. **Limitation** <br /> This license is valid for an organization with any number of servers up to a maximum online player count of 200. If you reach a daily peak of 200 players, we will be happy to provide you with a custom quote for the use of this software as well as related products. **Liability ** <br /> The authors of this software take no responsibility and liability for any damage caused by or with this software. Source Code and Further Development By purchasing this software you get the right to use it, but the source code is not included and may not be modified. You may not publish or otherwise distribute or sell any software that contains code from this software (except integrations to our public API). Termination We have the right to terminate this agreement if you violate this policy. You may also terminate this license at any time. Upon termination, you will lose all rights to use the software and will be forced to uninstall and irrevocably remove it from your infrastructure. You will also lose your purchased license, this process cannot be reversed. Likewise, no refunds will be made Publication and redistribution . You are not allowed to publish this software as well as the source code or to pass it on to external persons. It is not possible to transfer licenses to other persons or organizations. You are allowed to give the software to persons in your organization/team, provided that you can make sure that this license is respected and that the product is irrevocably deleted upon abandonment. Translated with www.DeepL.com/Translator (free version) Original License \u00b6 Pretronic Premium Resource License (PPR) Definition Diese Lizenz gilt f\u00fcr das Minecraft Plugin DKPerms, welches \u00fcber MCNative.org durch Pretronic (Davide Wietlisbach und Philipp Elvin Friedhoff) vertrieben wird. Nutzung Sie sind berechtigt eine Kopie dieser Software zu verwenden, sofern Sie eine Lizenz \u00fcber eine unserer offiziellen Verkaufsstellen erworben haben. Die Lizenz ist f\u00fcr den jeweilig angegebenen Zeitraum g\u00fcltig **Richtlinien** <br /> Diese Software darf nicht f\u00fcr rassistische, beleidigende, rechtsradikale, betr\u00fcgerische oder weitere Illegale Zwecke genutzt werden. **Limitierung** <br /> Diese Lizenz ist g\u00fcltig f\u00fcr eine Organisation mit beliebig vielen Servern bis zu einer maximalen online Spieleranzahl von 200. Erreichen Sie einen t\u00e4glichen H\u00f6hepunkt von 200 Spielern, werden wir Ihnen gerne ein individuelles Angebot f\u00fcr die Nutzung dieser Software sowie verwandten Produkte erstellen. **Haftung ** <br /> Die Autoren dieser Software nehmen keine Verantwortung und Haftung f\u00fcr Sch\u00e4den die durch oder mit dieser Software verursacht wurden. Source Code und Weiterentwicklung Durch den Kauf dieser Software erhalten Sie das Nutzungsrecht, der source code ist allerdings nicht enthalten und darf nicht ver\u00e4ndert werden. Sie sind nicht berechtigt jegliche Softwaren die Code von dieser Software (Ausgenommen sind Integrationen auf unsere \u00f6ffentliche API) enthalten zu ver\u00f6ffentlichen oder anderweitig zu verbreiten oder verkaufen. K\u00fcndigung Wir sind berechtigt diese Bedingen zu k\u00fcndigen, wenn Sie gegen diese Richtlinien verstossen. Ebenfalls haben Sie jederzeit die M\u00f6glichkeit diese Lizenz zu k\u00fcndigen. Durch die K\u00fcndigung verlieren Sie jegliches Rechte an der Nutzung der Software und sind gezwungen diese zu deinstallieren und unwiderruflich von Ihrer Infrastruktur zu entfernen. Dabei verlieren Sie auch Ihre erworbene Lizenz, dieser Vorgang kann nicht mehr r\u00fcckg\u00e4ngig gemacht werden. Ebenfalls werden keine Kosten zur\u00fcckerstatten Ver\u00f6ffentlichung und Weitergabe Sie sind nicht berechtigt diese Software so wie den Sourcecode zu ver\u00f6ffentlichen oder an aussenstehende Personen weiterzugeben. Es ist nicht m\u00f6glich Lizenzen auf andere Personen oder Organisationen zu \u00fcbertragen. Sie sind berechtigt die Software an Personen in ihrer Organisation/Team weiterzugeben, sofern sie sicher stellen k\u00f6nnen, dass diese Lizenz eingehalten wird und bei Verlass das Produkt unwiderruflich gel\u00f6scht wird.","title":"License"},{"location":"dkperms/license/#license","text":"DKPerms is licensed with Pretronic Premium Resource License (PPR) , see the exact license terms below.","title":"License"},{"location":"dkperms/license/#translated-license","text":"This is only a translation of the original license below, only the original one is valid. Pretronic Premium Resource License (PPR) Definition This license applies to the Minecraft plugin DKPerms, which is distributed via MCNative.org by Pretronic (Davide Wietlisbach and Philipp Elvin Friedhoff). Use You are entitled to use one copy of this software, provided you have purchased a license through one of our official sales outlets. The license is valid for the respective specified period of time. **Guidelines** <br /> This software may not be used for racist, offensive, right-wing, fraudulent or other Illegal purposes. **Limitation** <br /> This license is valid for an organization with any number of servers up to a maximum online player count of 200. If you reach a daily peak of 200 players, we will be happy to provide you with a custom quote for the use of this software as well as related products. **Liability ** <br /> The authors of this software take no responsibility and liability for any damage caused by or with this software. Source Code and Further Development By purchasing this software you get the right to use it, but the source code is not included and may not be modified. You may not publish or otherwise distribute or sell any software that contains code from this software (except integrations to our public API). Termination We have the right to terminate this agreement if you violate this policy. You may also terminate this license at any time. Upon termination, you will lose all rights to use the software and will be forced to uninstall and irrevocably remove it from your infrastructure. You will also lose your purchased license, this process cannot be reversed. Likewise, no refunds will be made Publication and redistribution . You are not allowed to publish this software as well as the source code or to pass it on to external persons. It is not possible to transfer licenses to other persons or organizations. You are allowed to give the software to persons in your organization/team, provided that you can make sure that this license is respected and that the product is irrevocably deleted upon abandonment. Translated with www.DeepL.com/Translator (free version)","title":"Translated License"},{"location":"dkperms/license/#original-license","text":"Pretronic Premium Resource License (PPR) Definition Diese Lizenz gilt f\u00fcr das Minecraft Plugin DKPerms, welches \u00fcber MCNative.org durch Pretronic (Davide Wietlisbach und Philipp Elvin Friedhoff) vertrieben wird. Nutzung Sie sind berechtigt eine Kopie dieser Software zu verwenden, sofern Sie eine Lizenz \u00fcber eine unserer offiziellen Verkaufsstellen erworben haben. Die Lizenz ist f\u00fcr den jeweilig angegebenen Zeitraum g\u00fcltig **Richtlinien** <br /> Diese Software darf nicht f\u00fcr rassistische, beleidigende, rechtsradikale, betr\u00fcgerische oder weitere Illegale Zwecke genutzt werden. **Limitierung** <br /> Diese Lizenz ist g\u00fcltig f\u00fcr eine Organisation mit beliebig vielen Servern bis zu einer maximalen online Spieleranzahl von 200. Erreichen Sie einen t\u00e4glichen H\u00f6hepunkt von 200 Spielern, werden wir Ihnen gerne ein individuelles Angebot f\u00fcr die Nutzung dieser Software sowie verwandten Produkte erstellen. **Haftung ** <br /> Die Autoren dieser Software nehmen keine Verantwortung und Haftung f\u00fcr Sch\u00e4den die durch oder mit dieser Software verursacht wurden. Source Code und Weiterentwicklung Durch den Kauf dieser Software erhalten Sie das Nutzungsrecht, der source code ist allerdings nicht enthalten und darf nicht ver\u00e4ndert werden. Sie sind nicht berechtigt jegliche Softwaren die Code von dieser Software (Ausgenommen sind Integrationen auf unsere \u00f6ffentliche API) enthalten zu ver\u00f6ffentlichen oder anderweitig zu verbreiten oder verkaufen. K\u00fcndigung Wir sind berechtigt diese Bedingen zu k\u00fcndigen, wenn Sie gegen diese Richtlinien verstossen. Ebenfalls haben Sie jederzeit die M\u00f6glichkeit diese Lizenz zu k\u00fcndigen. Durch die K\u00fcndigung verlieren Sie jegliches Rechte an der Nutzung der Software und sind gezwungen diese zu deinstallieren und unwiderruflich von Ihrer Infrastruktur zu entfernen. Dabei verlieren Sie auch Ihre erworbene Lizenz, dieser Vorgang kann nicht mehr r\u00fcckg\u00e4ngig gemacht werden. Ebenfalls werden keine Kosten zur\u00fcckerstatten Ver\u00f6ffentlichung und Weitergabe Sie sind nicht berechtigt diese Software so wie den Sourcecode zu ver\u00f6ffentlichen oder an aussenstehende Personen weiterzugeben. Es ist nicht m\u00f6glich Lizenzen auf andere Personen oder Organisationen zu \u00fcbertragen. Sie sind berechtigt die Software an Personen in ihrer Organisation/Team weiterzugeben, sofern sie sicher stellen k\u00f6nnen, dass diese Lizenz eingehalten wird und bei Verlass das Produkt unwiderruflich gel\u00f6scht wird.","title":"Original License"},{"location":"dkperms/support/","text":"Support \u00b6 DKPerms support is offered by our team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ Bug reports \u00b6 Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit **Network**: None / Proxy / CloudNet etc. **Storage**: SQLite / MariaDB etc. **Server Version / Build**: 1\u200b40\u200b2 **McNative Version / Build**: 1\u200b40\u200b2 **Client Version**: 1.8 **Logs / Images** https://paste.pretronic.net/ https://imgur.com/upload ./mcnative paste (recommended) **Description** A clear description about the issue and when it occurs. **To Reproduce** What we have to do, to trigger the bug. 1. Ban a player with /ban 2. Join the server Suggestions \u00b6 If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion. We use the Feedbacky platform to collect and vote for suggestions. Create a new Idea","title":"Support"},{"location":"dkperms/support/#support","text":"DKPerms support is offered by our team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ","title":"Support"},{"location":"dkperms/support/#bug-reports","text":"Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit **Network**: None / Proxy / CloudNet etc. **Storage**: SQLite / MariaDB etc. **Server Version / Build**: 1\u200b40\u200b2 **McNative Version / Build**: 1\u200b40\u200b2 **Client Version**: 1.8 **Logs / Images** https://paste.pretronic.net/ https://imgur.com/upload ./mcnative paste (recommended) **Description** A clear description about the issue and when it occurs. **To Reproduce** What we have to do, to trigger the bug. 1. Ban a player with /ban 2. Join the server","title":"Bug reports"},{"location":"dkperms/support/#suggestions","text":"If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion. We use the Feedbacky platform to collect and vote for suggestions. Create a new Idea","title":"Suggestions"},{"location":"dkperms/developer/","text":"Getting Started \u00b6 DKPerms contains a large and powerful API that is easy to use. The api is very flexible and gives you the possibility to fully interact with DKPerms. You don't need to worry about anything else, the DKPerms api interface will handle everything for you. As soon as McNative is available for developers, we will document exactly how to use and integrate with DKPerms. If you already want to use the DKPerms api, use the development channel on our Discord to get help from us and our community. Thread safety All operations in DKPerms are totally thread safety and designed for asynchronously usage. Storage & Synchronisation operations DKPerms offers you a simple api to create, modify, update and delete objects scopes and other stuff. You have not to deal with saving or synchronizing data, DKPerms is automatically handling those things in the background. Javadocs \u00b6 The full Api documentation is available as Javadocs here . This wiki covers only basic examples, the api is much bigger and offers many more possibilities. Dependency \u00b6 DKPerms is built with the Maven build tool and has its own repository (Public available). Repository Maven <repository> <id> pretronic </id> <url> https://repository.pretronic.net/repository/pretronic/ </url> </repository> Gradle repositories { maven { url \"https://repository.pretronic.net/repository/pretronic/\" } } Dependency Maven <dependency> <groupId> net.pretronic.dkperms </groupId> <artifactId> dkperms-api </artifactId> <version> VERSION </version> <scope> compile </scope> </dependency> Gradle dependencies { compile 'net.pretronic.dkperms:dkperms-api:VERSION' }","title":"Getting Started"},{"location":"dkperms/developer/#getting-started","text":"DKPerms contains a large and powerful API that is easy to use. The api is very flexible and gives you the possibility to fully interact with DKPerms. You don't need to worry about anything else, the DKPerms api interface will handle everything for you. As soon as McNative is available for developers, we will document exactly how to use and integrate with DKPerms. If you already want to use the DKPerms api, use the development channel on our Discord to get help from us and our community. Thread safety All operations in DKPerms are totally thread safety and designed for asynchronously usage. Storage & Synchronisation operations DKPerms offers you a simple api to create, modify, update and delete objects scopes and other stuff. You have not to deal with saving or synchronizing data, DKPerms is automatically handling those things in the background.","title":"Getting Started"},{"location":"dkperms/developer/#javadocs","text":"The full Api documentation is available as Javadocs here . This wiki covers only basic examples, the api is much bigger and offers many more possibilities.","title":"Javadocs"},{"location":"dkperms/developer/#dependency","text":"DKPerms is built with the Maven build tool and has its own repository (Public available). Repository Maven <repository> <id> pretronic </id> <url> https://repository.pretronic.net/repository/pretronic/ </url> </repository> Gradle repositories { maven { url \"https://repository.pretronic.net/repository/pretronic/\" } } Dependency Maven <dependency> <groupId> net.pretronic.dkperms </groupId> <artifactId> dkperms-api </artifactId> <version> VERSION </version> <scope> compile </scope> </dependency> Gradle dependencies { compile 'net.pretronic.dkperms:dkperms-api:VERSION' }","title":"Dependency"},{"location":"dkperms/plugin-setup/configuration/","text":"Configuration \u00b6 This page describes all configuration possibilities in the DKPerms config.yml. Location: ./plugins/DKPerms/config.yml Index Scope settings McNative settings Object settings Security settings Delete timeout settings Format timeout settings Commands settings Scope settings \u00b6 DKPerms uses different scopes to separate permission levels. The scopes are arranged hierarchically in a tree structure and can be configured individually for each server. namespace The namespace where the plugin operates (Usually Minecraft) current Settings for the scope on the current server. dynamic If this value is True the scope will automatically detected on supported networks (e.g. BungeeCord, CloudNet). instance A custom configured server scope (e.g. CityBuild-1). group A custom configured server group area (all servers with the same role should have the same group). serverGroupSplit How the server group should be detected by the server name. worldKey Which scope key should be used to separate worlds ( \\\\World=Plots ). Example: scope: namespace: 'Minecraft' current: dynamic: true instance: '\\ServerGroup=Server\\Server=Server-1' group: '\\ServerGroup=Server' serverGroupSplit: '-' worldKey: 'World' McNative settings \u00b6 These settings define how the McNative permission api should integrate with DKPerms. managementScope The scopes to be taken by the McNative api group To which scope the McNative api should check and assign groups permission To which scope the McNative api should check and assign permission operator To which scope the McNative api should check and assign operator privileges (When /op is used) Example: mcnative: managementScope: group: '{global}' permission: '{currentGroup}' operator: '{currentGroup}' Object settings \u00b6 DKPerms uses different objects to store permissions (e.g. group and player). With this setting you can change the location of the storage scope. player The player object type scope The default scope to create and load players group The group object type scope The default scope to create and load groups track Permission group tracks scope The default scope to create and load tracks Example: object: player: scope: '\\\\namespace=minecraft' group: scope: '\\\\namespace=minecraft' track: scope: '\\\\namespace=minecraft' Security settings \u00b6 To keep DKPerms secure logging Change logging enabled If True changes are logged into the database commands DKPerms commands enabled If True commands are enabled (console and chat) operator Default Minecraft operation privileges (When /op is used) enabled If True operators are allowed and /op can be used restricted Command restricted to certain users enabled If True only the configured users can execute DKPerms commands (except /rank) users The uuid or name of the players in an array that are allowed to execute DKPerms commands. Example: security: logging: enabled: true commands: enabled: true operator: enabled: false restricted: enabled: false users: ['Dkrieger','cb7f0812-1fbb-4715-976e-a81e52be4b67'] Delete timeout settings \u00b6 To clean your database from expired permissions, groups or properties, DKPerms uses a simple task. (Note, if the permission has expired before the task is executed, the permission is already not valid and visible). deleteTimedOutEntries Database cleanup enabled If True the task will be executed interval How often to run the task to delete unused entries (Use McNative duration format). Example: deleteTimedOutEntries: enabled: true interval: '30m' Format timeout settings \u00b6 Display format options format General formatting settings date Date formatting settings pattern Java date time patterns (https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html) endlessly The symbol used for permanent things Example: format: date: pattern: 'dd-MM-yyyy HH:mm' endlessly: '-' Commands settings \u00b6 DKPerms commands settings command General formatting settings permission The DKPerms admin permission command enabled If True the command is enabled and can be used name The name of the command permission The required permission to use this command aliases Aliases to execute this command rank The DKPerms simplified rank command ... team The DKPerms team info command ... Example: command: permission: enabled: true name: 'permissions' permission: 'dkperms.admin' aliases: ['perms','permission','perm','dkperms'] rank: enabled: true name: 'rank' permission: 'dkperms.rank' aliases: ['ranks'] team: enabled: true name: 'team' permission: 'dkperms.team' aliases: []","title":"Configuration"},{"location":"dkperms/plugin-setup/configuration/#configuration","text":"This page describes all configuration possibilities in the DKPerms config.yml. Location: ./plugins/DKPerms/config.yml","title":"Configuration"},{"location":"dkperms/plugin-setup/configuration/#scope-settings","text":"DKPerms uses different scopes to separate permission levels. The scopes are arranged hierarchically in a tree structure and can be configured individually for each server. namespace The namespace where the plugin operates (Usually Minecraft) current Settings for the scope on the current server. dynamic If this value is True the scope will automatically detected on supported networks (e.g. BungeeCord, CloudNet). instance A custom configured server scope (e.g. CityBuild-1). group A custom configured server group area (all servers with the same role should have the same group). serverGroupSplit How the server group should be detected by the server name. worldKey Which scope key should be used to separate worlds ( \\\\World=Plots ). Example: scope: namespace: 'Minecraft' current: dynamic: true instance: '\\ServerGroup=Server\\Server=Server-1' group: '\\ServerGroup=Server' serverGroupSplit: '-' worldKey: 'World'","title":"Scope settings"},{"location":"dkperms/plugin-setup/configuration/#mcnative-settings","text":"These settings define how the McNative permission api should integrate with DKPerms. managementScope The scopes to be taken by the McNative api group To which scope the McNative api should check and assign groups permission To which scope the McNative api should check and assign permission operator To which scope the McNative api should check and assign operator privileges (When /op is used) Example: mcnative: managementScope: group: '{global}' permission: '{currentGroup}' operator: '{currentGroup}'","title":"McNative settings"},{"location":"dkperms/plugin-setup/configuration/#object-settings","text":"DKPerms uses different objects to store permissions (e.g. group and player). With this setting you can change the location of the storage scope. player The player object type scope The default scope to create and load players group The group object type scope The default scope to create and load groups track Permission group tracks scope The default scope to create and load tracks Example: object: player: scope: '\\\\namespace=minecraft' group: scope: '\\\\namespace=minecraft' track: scope: '\\\\namespace=minecraft'","title":"Object settings"},{"location":"dkperms/plugin-setup/configuration/#security-settings","text":"To keep DKPerms secure logging Change logging enabled If True changes are logged into the database commands DKPerms commands enabled If True commands are enabled (console and chat) operator Default Minecraft operation privileges (When /op is used) enabled If True operators are allowed and /op can be used restricted Command restricted to certain users enabled If True only the configured users can execute DKPerms commands (except /rank) users The uuid or name of the players in an array that are allowed to execute DKPerms commands. Example: security: logging: enabled: true commands: enabled: true operator: enabled: false restricted: enabled: false users: ['Dkrieger','cb7f0812-1fbb-4715-976e-a81e52be4b67']","title":"Security settings"},{"location":"dkperms/plugin-setup/configuration/#delete-timeout-settings","text":"To clean your database from expired permissions, groups or properties, DKPerms uses a simple task. (Note, if the permission has expired before the task is executed, the permission is already not valid and visible). deleteTimedOutEntries Database cleanup enabled If True the task will be executed interval How often to run the task to delete unused entries (Use McNative duration format). Example: deleteTimedOutEntries: enabled: true interval: '30m'","title":"Delete timeout settings"},{"location":"dkperms/plugin-setup/configuration/#format-timeout-settings","text":"Display format options format General formatting settings date Date formatting settings pattern Java date time patterns (https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html) endlessly The symbol used for permanent things Example: format: date: pattern: 'dd-MM-yyyy HH:mm' endlessly: '-'","title":"Format timeout settings"},{"location":"dkperms/plugin-setup/configuration/#commands-settings","text":"DKPerms commands settings command General formatting settings permission The DKPerms admin permission command enabled If True the command is enabled and can be used name The name of the command permission The required permission to use this command aliases Aliases to execute this command rank The DKPerms simplified rank command ... team The DKPerms team info command ... Example: command: permission: enabled: true name: 'permissions' permission: 'dkperms.admin' aliases: ['perms','permission','perm','dkperms'] rank: enabled: true name: 'rank' permission: 'dkperms.rank' aliases: ['ranks'] team: enabled: true name: 'team' permission: 'dkperms.team' aliases: []","title":"Commands settings"},{"location":"dkperms/plugin-setup/installation/","text":"DKPerms Installation \u00b6 The DKPerms installation is very easy and can be done in a few minutes. Follow these instructions exactly and contact our support if you have any questions or problems. Compatibility \u00b6 DKPerms supports minecraft 1.8 and later and runs on all McNative supported platforms: Bukkit / Spigot BungeeCord DKPerms is designed for running on multiple servers and supports all McNative messaging technologies: BungeeCord Proxy Network (Plugin Message Channels) CloudNet V2 (Multi proxy) CloudNet V3 (Multi proxy) Requirements \u00b6 DKPerms requires java 8 or higher and a stable internet connection (DKPerms downloads all necessary libraries dynamically). If you are using DKPerms on multiple servers, you also need a supported remote database (MySQL, PostgreSQL, MS-SQL, MongoDB et.c). Installation \u00b6 1. - Get A License \u00b6 DKPerms is a paid plugin and before you can start with the setup you have to purchase a license in the McNative Store . See also the DKPerms license agreement . If you are a buyer of DKPermsV1 on SpigotMc, you can get a free 6-month license until If you are a buyer of DKPermsV1 on SpigotMc, you can get a free 6-month license until 2021-05-01**. To get your license, contact DKPerms via SpigotMc conversation. 2. - Download \u00b6 To install DKPerms, download the latest loader here and move it to your plugins folder. Start your server, if everything worked correctly a folder named DKPerms should be created in ./plugins . In this setup, we use the simple loader. If you are interested in the template loader to install multiple resources dynamically, checkout the McNative Docs . If you are using a network with multiple servers, you must install DKPerms on all servers and connect to the same remote database. (3. - Storage setup) \u00b6 After the installation you can optionally set up a storage solution like MySQL. Read more about storages here If you are using a network with multiple servers, cou must connect to the same remote database. 4. - Grant administrator rights to your account \u00b6 After DKPerms is successfully installed on your network, join with your minecraft account on the server and open the console window then run the following command (Replace <player> with your username). ./perms user <player> permission add *","title":"Installation"},{"location":"dkperms/plugin-setup/installation/#dkperms-installation","text":"The DKPerms installation is very easy and can be done in a few minutes. Follow these instructions exactly and contact our support if you have any questions or problems.","title":"DKPerms Installation"},{"location":"dkperms/plugin-setup/installation/#compatibility","text":"DKPerms supports minecraft 1.8 and later and runs on all McNative supported platforms: Bukkit / Spigot BungeeCord DKPerms is designed for running on multiple servers and supports all McNative messaging technologies: BungeeCord Proxy Network (Plugin Message Channels) CloudNet V2 (Multi proxy) CloudNet V3 (Multi proxy)","title":"Compatibility"},{"location":"dkperms/plugin-setup/installation/#requirements","text":"DKPerms requires java 8 or higher and a stable internet connection (DKPerms downloads all necessary libraries dynamically). If you are using DKPerms on multiple servers, you also need a supported remote database (MySQL, PostgreSQL, MS-SQL, MongoDB et.c).","title":"Requirements"},{"location":"dkperms/plugin-setup/installation/#installation","text":"","title":"Installation"},{"location":"dkperms/plugin-setup/installation/#1-get-a-license","text":"DKPerms is a paid plugin and before you can start with the setup you have to purchase a license in the McNative Store . See also the DKPerms license agreement . If you are a buyer of DKPermsV1 on SpigotMc, you can get a free 6-month license until If you are a buyer of DKPermsV1 on SpigotMc, you can get a free 6-month license until 2021-05-01**. To get your license, contact DKPerms via SpigotMc conversation.","title":"1. - Get A License"},{"location":"dkperms/plugin-setup/installation/#2-download","text":"To install DKPerms, download the latest loader here and move it to your plugins folder. Start your server, if everything worked correctly a folder named DKPerms should be created in ./plugins . In this setup, we use the simple loader. If you are interested in the template loader to install multiple resources dynamically, checkout the McNative Docs . If you are using a network with multiple servers, you must install DKPerms on all servers and connect to the same remote database.","title":"2. - Download"},{"location":"dkperms/plugin-setup/installation/#3-storage-setup","text":"After the installation you can optionally set up a storage solution like MySQL. Read more about storages here If you are using a network with multiple servers, cou must connect to the same remote database.","title":"(3. - Storage setup)"},{"location":"dkperms/plugin-setup/installation/#4-grant-administrator-rights-to-your-account","text":"After DKPerms is successfully installed on your network, join with your minecraft account on the server and open the console window then run the following command (Replace <player> with your username). ./perms user <player> permission add *","title":"4. - Grant administrator rights to your account"},{"location":"dkperms/plugin-setup/storage/","text":"Storage setup \u00b6 DKPerms uses McNative memory technology and supports all memory types supported by McNative. McNative storage technology is centralized storage integration for all supported plugins, it brings various performance and time benefits. Read more about it here Location: ./plugins/McNative/storage.yml The configuration consists of two parts, the drivers that connect to the database server which are shared between the plugins, and the database part, where you can configure the database for each plugin. Driver settings \u00b6 You can use the same driver for multiple plugins, see all supported types and configuration options in the McNative documentation. Only one sql setup is covered on this page. McNative driver docs mysql The internal name of the driver (Used below in the database driverName setting) address The address of your database server username The username to authenticate password The password to authenticate driver The used driver (See all available drivers in the McNative docs) name The internal driver name (Used for logging and separation) dialectName The sql dialect (Supported: MySQL, MariaDB, MS-SQL, PostgreSQL) useSSL The above configured driver to use Example: drivers: mysql: address: '127.0.0.1:3306' username: 'mcnative' password: '1234' driver: 'net.pretronic.databasequery.sql.driver.SQLDatabaseDriver' name: 'MySQL' dialectName: 'MySQL' useSSL: false Database settings \u00b6 After the driver configuration, you have to set up a database for DKPerms in the databases section. pluginName The plugin name, use DKPerms name The internal database name, use default database The name of your database (e.g. DKPerms ) driverName The above configured driver to use Example: databases: - pluginName: 'DKPerms' name: 'default' database: 'DKPerms' driverName: 'default' Database settings \u00b6 A complete configuration may look something like this (Only DKPerms): drivers: mysql: address: '127.0.0.1:3306' username: 'mcnative' password: '1234' driver: 'net.pretronic.databasequery.sql.driver.SQLDatabaseDriver' name: 'MySQL' dialectName: 'MySQL' useSSL: false databases: - pluginName: 'DKPerms' name: 'default' database: 'DKPerms' driverName: 'mysql'","title":"Storage"},{"location":"dkperms/plugin-setup/storage/#storage-setup","text":"DKPerms uses McNative memory technology and supports all memory types supported by McNative. McNative storage technology is centralized storage integration for all supported plugins, it brings various performance and time benefits. Read more about it here Location: ./plugins/McNative/storage.yml The configuration consists of two parts, the drivers that connect to the database server which are shared between the plugins, and the database part, where you can configure the database for each plugin.","title":"Storage setup"},{"location":"dkperms/plugin-setup/storage/#driver-settings","text":"You can use the same driver for multiple plugins, see all supported types and configuration options in the McNative documentation. Only one sql setup is covered on this page. McNative driver docs mysql The internal name of the driver (Used below in the database driverName setting) address The address of your database server username The username to authenticate password The password to authenticate driver The used driver (See all available drivers in the McNative docs) name The internal driver name (Used for logging and separation) dialectName The sql dialect (Supported: MySQL, MariaDB, MS-SQL, PostgreSQL) useSSL The above configured driver to use Example: drivers: mysql: address: '127.0.0.1:3306' username: 'mcnative' password: '1234' driver: 'net.pretronic.databasequery.sql.driver.SQLDatabaseDriver' name: 'MySQL' dialectName: 'MySQL' useSSL: false","title":"Driver settings"},{"location":"dkperms/plugin-setup/storage/#database-settings","text":"After the driver configuration, you have to set up a database for DKPerms in the databases section. pluginName The plugin name, use DKPerms name The internal database name, use default database The name of your database (e.g. DKPerms ) driverName The above configured driver to use Example: databases: - pluginName: 'DKPerms' name: 'default' database: 'DKPerms' driverName: 'default'","title":"Database settings"},{"location":"dkperms/plugin-setup/storage/#database-settings_1","text":"A complete configuration may look something like this (Only DKPerms): drivers: mysql: address: '127.0.0.1:3306' username: 'mcnative' password: '1234' driver: 'net.pretronic.databasequery.sql.driver.SQLDatabaseDriver' name: 'MySQL' dialectName: 'MySQL' useSSL: false databases: - pluginName: 'DKPerms' name: 'default' database: 'DKPerms' driverName: 'mysql'","title":"Database settings"},{"location":"dkperms/plugin-usage/placeholders/","text":"Placeholders \u00b6 DKPerms offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKPerms placeholders are available in all McNative supported placeholder sources (PlaceholderAPI). %dkperms_name% \u00b6 This placeholder shows the name of the player. %dkperms_uniqueId% \u00b6 This placeholder shows the unique id of the player %dkperms_id% \u00b6 This placeholder returns the unique internal object ID of DKPerms. %dkperms_scope% \u00b6 Returns the actual scope where a player is currently located. Note that this can cause problems with proxy networks. %dkperms_rank% \u00b6 Returns the highest rank of the player, ordered by priority. %dkperms_ranks% \u00b6 Returns all assigned ranks of a player, separated by a comma. Group colors are not contained in this placeholder. %dkperms_color% \u00b6 Returns the color of the player. The color is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms. %dkperms_prefix% \u00b6 Returns the prefix of the player. The prefix is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms. %dkperms_suffix% \u00b6 Returns the color of the suffix. The suffix is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms. %dkperms_display% \u00b6 Returns the dispaly (chat prefix) of the suffix. The dispaly (chat prefix) is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms. %dkperms_priority% \u00b6 Returns the player priority (used in the tab). The priority is provided by the McNative player design and set directly to a player or assigned group as a meta value in DKPerms. If no meta is set, the highest group priority is taken. %dkperms_team% \u00b6 Returns true if the player is in a group marked as team (set via the group meta). %dkperms_property_ % \u00b6 This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key. %dkperms_boolProperty_ % \u00b6 This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key. In addition to the normal property, it returns true if the value matches true , otherwise it returns false. %dkperms_numberProperty_ % \u00b6 This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key. In addition to the normal property, 0 is returned if the value is not set.","title":"Placeholders"},{"location":"dkperms/plugin-usage/placeholders/#placeholders","text":"DKPerms offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKPerms placeholders are available in all McNative supported placeholder sources (PlaceholderAPI).","title":"Placeholders"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_name","text":"This placeholder shows the name of the player.","title":"%dkperms_name%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_uniqueid","text":"This placeholder shows the unique id of the player","title":"%dkperms_uniqueId%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_id","text":"This placeholder returns the unique internal object ID of DKPerms.","title":"%dkperms_id%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_scope","text":"Returns the actual scope where a player is currently located. Note that this can cause problems with proxy networks.","title":"%dkperms_scope%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_rank","text":"Returns the highest rank of the player, ordered by priority.","title":"%dkperms_rank%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_ranks","text":"Returns all assigned ranks of a player, separated by a comma. Group colors are not contained in this placeholder.","title":"%dkperms_ranks%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_color","text":"Returns the color of the player. The color is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms.","title":"%dkperms_color%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_prefix","text":"Returns the prefix of the player. The prefix is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms.","title":"%dkperms_prefix%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_suffix","text":"Returns the color of the suffix. The suffix is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms.","title":"%dkperms_suffix%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_display","text":"Returns the dispaly (chat prefix) of the suffix. The dispaly (chat prefix) is provided by the McNative player design and set directly to a player or an assigned group as a meta value in DKPerms.","title":"%dkperms_display%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_priority","text":"Returns the player priority (used in the tab). The priority is provided by the McNative player design and set directly to a player or assigned group as a meta value in DKPerms. If no meta is set, the highest group priority is taken.","title":"%dkperms_priority%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_team","text":"Returns true if the player is in a group marked as team (set via the group meta).","title":"%dkperms_team%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_property_","text":"This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key.","title":"%dkperms_property_%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_boolproperty_","text":"This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key. In addition to the normal property, it returns true if the value matches true , otherwise it returns false.","title":"%dkperms_boolProperty_%"},{"location":"dkperms/plugin-usage/placeholders/#dkperms_numberproperty_","text":"This placeholder returns a custom meta value set on a DKPerms object or an assigned group. Replace <KeyName> with the name of your meta key. In addition to the normal property, 0 is returned if the value is not set.","title":"%dkperms_numberProperty_%"},{"location":"dkperms/plugin-usage/commands/","text":"Commands \u00b6 This page describes all available commands to operate DKPerms from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ... General commands \u00b6 These commands are used to operate DKPerms on your network or server. /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse User commands \u00b6 These commands are for manging user permissions, groups and metadata. <player> The name or unique id of the player. /perms user <player> info /perms user <player> permission /perms user <player> meta /perms user <player> parent Group commands \u00b6 Commands for manging groups. <group> is the name of the group. /perms group <group> info /perms group <group> create /perms group <group> delete /perms group <group> rename <newname> /perms group <group> copy <newname> /perms group <group> members [scope] /perms group <group> permission /perms group <group> meta /perms group <group> group /perms group <group> setPriority <priorit> Permission commands \u00b6 Sub commands to assign permissions to users and groups. permission set <permission> [action] [duration] [scope] [modifier] permission unset <permission> [scope] permission clear [scope] permission list [scope] permission tree [scope] permission show <permission> [scope] permission check <permission> [scope] Parent commands \u00b6 Sub commands to assign parents (groups) to users and groups. parent set <parent> [action] [duration] [scope] [modifier] parent add <parent> [action] [duration] [scope] [modifier] parent remove <parent> [scope] parent clear [scope] parent list [scope] parent tree [scope] parent show <parent> [scope] parent check <parent> [scope] Meta commands \u00b6 Sub commands to set meta values to users and groups. set <key> <value> [duration] [scope] unset <key> [scope] show <key> [scope] clear [scope] list [scope] tree [scope] check <key> [scope] Track commands \u00b6 Rank commands \u00b6 Simplified commands to assign groups / ranks to players. You can permit your staff team to use these commands. /rank list /rank set /rank add /rank remove /rank promote /rank demote Additional commands \u00b6 Additional commands provided by DKPerms. /team","title":"Overview"},{"location":"dkperms/plugin-usage/commands/#commands","text":"This page describes all available commands to operate DKPerms from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ...","title":"Commands"},{"location":"dkperms/plugin-usage/commands/#general-commands","text":"These commands are used to operate DKPerms on your network or server. /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse","title":"General commands"},{"location":"dkperms/plugin-usage/commands/#user-commands","text":"These commands are for manging user permissions, groups and metadata. <player> The name or unique id of the player. /perms user <player> info /perms user <player> permission /perms user <player> meta /perms user <player> parent","title":"User commands"},{"location":"dkperms/plugin-usage/commands/#group-commands","text":"Commands for manging groups. <group> is the name of the group. /perms group <group> info /perms group <group> create /perms group <group> delete /perms group <group> rename <newname> /perms group <group> copy <newname> /perms group <group> members [scope] /perms group <group> permission /perms group <group> meta /perms group <group> group /perms group <group> setPriority <priorit>","title":"Group commands"},{"location":"dkperms/plugin-usage/commands/#permission-commands","text":"Sub commands to assign permissions to users and groups. permission set <permission> [action] [duration] [scope] [modifier] permission unset <permission> [scope] permission clear [scope] permission list [scope] permission tree [scope] permission show <permission> [scope] permission check <permission> [scope]","title":"Permission commands"},{"location":"dkperms/plugin-usage/commands/#parent-commands","text":"Sub commands to assign parents (groups) to users and groups. parent set <parent> [action] [duration] [scope] [modifier] parent add <parent> [action] [duration] [scope] [modifier] parent remove <parent> [scope] parent clear [scope] parent list [scope] parent tree [scope] parent show <parent> [scope] parent check <parent> [scope]","title":"Parent commands"},{"location":"dkperms/plugin-usage/commands/#meta-commands","text":"Sub commands to set meta values to users and groups. set <key> <value> [duration] [scope] unset <key> [scope] show <key> [scope] clear [scope] list [scope] tree [scope] check <key> [scope]","title":"Meta commands"},{"location":"dkperms/plugin-usage/commands/#track-commands","text":"","title":"Track commands"},{"location":"dkperms/plugin-usage/commands/#rank-commands","text":"Simplified commands to assign groups / ranks to players. You can permit your staff team to use these commands. /rank list /rank set /rank add /rank remove /rank promote /rank demote","title":"Rank commands"},{"location":"dkperms/plugin-usage/commands/#additional-commands","text":"Additional commands provided by DKPerms. /team","title":"Additional commands"},{"location":"dkperms/plugin-usage/commands/additional-commands/","text":"Additional Commands \u00b6","title":"Additional Commands"},{"location":"dkperms/plugin-usage/commands/additional-commands/#additional-commands","text":"","title":"Additional Commands"},{"location":"dkperms/plugin-usage/commands/general-commands/","text":"General Commands \u00b6 This page describes the usage and permissions of the DKPerms general commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse /perms \u00b6 Permission: dkperms.admin This is the base command of DKPerms. It is use for administrating the whole DKPerms permission system on your network. If you don't have access to this command, the plugin version and author is displayed. /perms info \u00b6 Permission: dkperms.admin Alias: information, i, version, v Shows information about the current installed plugin, like the version and author. /perms sync \u00b6 Permission: dkperms.admin Alias: synchronize, s Synchronizes permissions, groups, users and metadata a cross multiple server in a network. /perms migrate <system> \u00b6 Permission: dkperms.admin Alias: migration, m Arguments: <system> The system to migrate (DKPermsLegacy, PermissionEx etc.) Imports permissions and groups from other permission systems or older DKPerms versions. You can find a more detailed explanation here . /perms groups \u00b6 Permission: dkperms.admin Lists all available groups sorted by priority. /perms group <group> ... \u00b6 Permission: dkperms.admin Alias: g Arguments: <group> The name of the group ... Optional sub commands, see Permission Group Commands Shows information about the targeted group and is used for managing groups. You can find a more detailed explanation here . /perms user <player> ... \u00b6 Permission: dkperms.admin Alias: u, player, p Arguments: <player> The name of the player ... Optional sub commands, see User Commands Shows information about the targeted group and is used for managing players. You can find a more detailed explanation here . /perms track <track> ... \u00b6 Permission: dkperms.admin Alias: t Arguments: <track> The name of the track ... Optional sub commands, see Track Commands Shows information about the targeted track and is used for managing tracks. You can find a more detailed explanation here . /perms analyse <action> \u00b6 Permission: dkperms.admin Arguments: <action> The action to perform Helps debugging permissions problems on your server Available actions: on Enables permission analysing and printing off Disables permission analysing and printing join Joins the player into the printing listener to receive permission debug prints leave Removed the player from the printing listener","title":"General Commands"},{"location":"dkperms/plugin-usage/commands/general-commands/#general-commands","text":"This page describes the usage and permissions of the DKPerms general commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"General Commands"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms","text":"Permission: dkperms.admin This is the base command of DKPerms. It is use for administrating the whole DKPerms permission system on your network. If you don't have access to this command, the plugin version and author is displayed.","title":"/perms"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-info","text":"Permission: dkperms.admin Alias: information, i, version, v Shows information about the current installed plugin, like the version and author.","title":"/perms info"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-sync","text":"Permission: dkperms.admin Alias: synchronize, s Synchronizes permissions, groups, users and metadata a cross multiple server in a network.","title":"/perms sync"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-migrate-system","text":"Permission: dkperms.admin Alias: migration, m Arguments: <system> The system to migrate (DKPermsLegacy, PermissionEx etc.) Imports permissions and groups from other permission systems or older DKPerms versions. You can find a more detailed explanation here .","title":"/perms migrate &lt;system&gt;"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-groups","text":"Permission: dkperms.admin Lists all available groups sorted by priority.","title":"/perms groups"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-group-group","text":"Permission: dkperms.admin Alias: g Arguments: <group> The name of the group ... Optional sub commands, see Permission Group Commands Shows information about the targeted group and is used for managing groups. You can find a more detailed explanation here .","title":"/perms group &lt;group&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-user-player","text":"Permission: dkperms.admin Alias: u, player, p Arguments: <player> The name of the player ... Optional sub commands, see User Commands Shows information about the targeted group and is used for managing players. You can find a more detailed explanation here .","title":"/perms user &lt;player&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-track-track","text":"Permission: dkperms.admin Alias: t Arguments: <track> The name of the track ... Optional sub commands, see Track Commands Shows information about the targeted track and is used for managing tracks. You can find a more detailed explanation here .","title":"/perms track &lt;track&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-analyse-action","text":"Permission: dkperms.admin Arguments: <action> The action to perform Helps debugging permissions problems on your server Available actions: on Enables permission analysing and printing off Disables permission analysing and printing join Joins the player into the printing listener to receive permission debug prints leave Removed the player from the printing listener","title":"/perms analyse &lt;action&gt;"},{"location":"dkperms/plugin-usage/commands/group-commands/","text":"Group Commands \u00b6 This page describes the usage of DKPerms group commands. The group command always starts with /perms group <group> , while <group> is the name of the group. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /perms group <group> info /perms group <group> create /perms group <group> delete /perms group <group> rename <newname> /perms group <group> copy <newname> /perms group <group> members [scope] /perms group <group> permission /perms group <group> meta /perms group <group> group /perms group <group> setPriority <priorit> /perms group <group> info \u00b6 Permission: dkperms.admin Alias: i Shows information about the group and its primary parent groups. /perms group <group> create \u00b6 Permission: dkperms.admin Alias: c This command creates a new permission group that can be assigned to users or other groups. /perms group <group> delete \u00b6 Permission: dkperms.admin Alias: d This command deletes an existing permission group, all players will be removed. /perms group <group> rename <newname> \u00b6 Permission: dkperms.admin Alias: d Arguments: <newname> The new name of the group This command renames an existing permission group. /perms group <group> copy <newname> \u00b6 Permission: dkperms.admin Alias: clone, c Arguments: <newname> The name for the new group This command copies an existing group and all its permissions, parent groups and metas. /perms group <group> members [scope] \u00b6 Permission: dkperms.admin Alias: n, list, players Arguments: [scope] The scope to which the group should be assigned (by default, the namespace minecraft is used). Lists all members of this group /perms group <group> setPriority <priorit> \u00b6 Permission: dkperms.admin Alias: priority, p Arguments: <priorit> The priority to set (1 = Highest priority) Set the main priority of your hierarchy structure to this group. /perms group <group> permission \u00b6 Permission: dkperms.admin Alias: permissions, perm, perms, p Arguments: ... Sub commands, see Permission Commands With this command you can add, delete, change or list permissions of a group. You can find a more detailed explanation here . /perms group <group> meta \u00b6 Permission: dkperms.admin Alias: m, properties Arguments: ... Sub commands, see Meta Commands With this command you can add, delete, change or list metadata of a group. You can find a more detailed explanation here . /perms group <group> group \u00b6 Permission: dkperms.admin Alias: group, g Arguments: ... Sub commands, see Parent Commands With this command you can set, add, delete or list inherited groups (parents) of a group. You can find a more detailed explanation here .","title":"Group Commands"},{"location":"dkperms/plugin-usage/commands/group-commands/#group-commands","text":"This page describes the usage of DKPerms group commands. The group command always starts with /perms group <group> , while <group> is the name of the group. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"Group Commands"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-info","text":"Permission: dkperms.admin Alias: i Shows information about the group and its primary parent groups.","title":"/perms group &lt;group&gt; info"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-create","text":"Permission: dkperms.admin Alias: c This command creates a new permission group that can be assigned to users or other groups.","title":"/perms group &lt;group&gt; create"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-delete","text":"Permission: dkperms.admin Alias: d This command deletes an existing permission group, all players will be removed.","title":"/perms group &lt;group&gt; delete"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-rename-newname","text":"Permission: dkperms.admin Alias: d Arguments: <newname> The new name of the group This command renames an existing permission group.","title":"/perms group &lt;group&gt; rename &lt;newname&gt;"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-copy-newname","text":"Permission: dkperms.admin Alias: clone, c Arguments: <newname> The name for the new group This command copies an existing group and all its permissions, parent groups and metas.","title":"/perms group &lt;group&gt; copy &lt;newname&gt;"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-members-scope","text":"Permission: dkperms.admin Alias: n, list, players Arguments: [scope] The scope to which the group should be assigned (by default, the namespace minecraft is used). Lists all members of this group","title":"/perms group &lt;group&gt; members [scope]"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-setpriority-priorit","text":"Permission: dkperms.admin Alias: priority, p Arguments: <priorit> The priority to set (1 = Highest priority) Set the main priority of your hierarchy structure to this group.","title":"/perms group &lt;group&gt; setPriority &lt;priorit&gt;"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-permission","text":"Permission: dkperms.admin Alias: permissions, perm, perms, p Arguments: ... Sub commands, see Permission Commands With this command you can add, delete, change or list permissions of a group. You can find a more detailed explanation here .","title":"/perms group &lt;group&gt; permission"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-meta","text":"Permission: dkperms.admin Alias: m, properties Arguments: ... Sub commands, see Meta Commands With this command you can add, delete, change or list metadata of a group. You can find a more detailed explanation here .","title":"/perms group &lt;group&gt; meta"},{"location":"dkperms/plugin-usage/commands/group-commands/#perms-group-group-group","text":"Permission: dkperms.admin Alias: group, g Arguments: ... Sub commands, see Parent Commands With this command you can set, add, delete or list inherited groups (parents) of a group. You can find a more detailed explanation here .","title":"/perms group &lt;group&gt; group"},{"location":"dkperms/plugin-usage/commands/meta-commands/","text":"Meta Commands \u00b6 This page describes the usage of DKPerms meta-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Default keys for groups description <string> The description of the group (Showed in /team). default <boolean> If the group is default assigned to players. team <boolean> Shows that the group belongs to the server team. color <string> The color of the group. The color is displayed for example in /perms groups . You can find the color codes on this website: https://www.digminecraft.com/lists/color_list_pc.php (replace \u00a7 to &) chat <string> The chat format of the group. prefix <string> The tablist prefix of the group. The prefix is shown in front of the player name. This cannot be longer than 16 characters. suffix <string> The tablist suffix of the group. The suffix is displayed after the player name. This cannot be longer than 16 characters. Default keys for user color <string> The color of the player. (Normally taken from the group) `chat <string> The chat format of the player (Normally taken from the group). prefix <string> The tablist prefix of the user. The prefix is shown in front of the player name. This cannot be longer than 16 characters (Normally taken from the group) suffix <string> The tablist suffix of the user. The suffix is displayed after the player name. This cannot be longer than 16 characters (Normally taken from the group) Index set <key> <value> [duration] [scope] unset <key> [scope] clear [scope] list [scope] tree [scope] show <key> [scope] check <key> [scope] set <key> <value> [duration] [scope] \u00b6 Permission: dkperms.admin Alias: s Arguments: <key> The meta key (default or custom) <value> The value to set [duration] The duration of how long the value is set to this object [scope] On which scope the value is set Sets a meta value (prefix, suffix etc.) to a user or group. unset <key> [scope] \u00b6 Permission: dkperms.admin Alias: u Arguments: <key> The meta key to remove [scope] On which scope the value should be removed Removes a meta value from a user or group. clear [scope] \u00b6 Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the meta values should be cleared Clears all meta values form a user or group list [scope] \u00b6 Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all meta values of a user or group. tree [scope] \u00b6 Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the meta tree of a player or group. show <key> [scope] \u00b6 Permission: dkperms.admin Alias: s, get, g Arguments: <key> The meta key to show [scope] On which scope the meta value should be showed Show the current configuration of a meta value. check <key> [scope] \u00b6 Permission: dkperms.admin Alias: c, test Arguments: <key> The name of the meta key to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check which is the effected meta value (The check tests each level and gives feedback on the status).","title":"Meta Commands"},{"location":"dkperms/plugin-usage/commands/meta-commands/#meta-commands","text":"This page describes the usage of DKPerms meta-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Default keys for groups description <string> The description of the group (Showed in /team). default <boolean> If the group is default assigned to players. team <boolean> Shows that the group belongs to the server team. color <string> The color of the group. The color is displayed for example in /perms groups . You can find the color codes on this website: https://www.digminecraft.com/lists/color_list_pc.php (replace \u00a7 to &) chat <string> The chat format of the group. prefix <string> The tablist prefix of the group. The prefix is shown in front of the player name. This cannot be longer than 16 characters. suffix <string> The tablist suffix of the group. The suffix is displayed after the player name. This cannot be longer than 16 characters. Default keys for user color <string> The color of the player. (Normally taken from the group) `chat <string> The chat format of the player (Normally taken from the group). prefix <string> The tablist prefix of the user. The prefix is shown in front of the player name. This cannot be longer than 16 characters (Normally taken from the group) suffix <string> The tablist suffix of the user. The suffix is displayed after the player name. This cannot be longer than 16 characters (Normally taken from the group)","title":"Meta Commands"},{"location":"dkperms/plugin-usage/commands/meta-commands/#set-key-value-duration-scope","text":"Permission: dkperms.admin Alias: s Arguments: <key> The meta key (default or custom) <value> The value to set [duration] The duration of how long the value is set to this object [scope] On which scope the value is set Sets a meta value (prefix, suffix etc.) to a user or group.","title":"set &lt;key&gt; &lt;value&gt; [duration] [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#unset-key-scope","text":"Permission: dkperms.admin Alias: u Arguments: <key> The meta key to remove [scope] On which scope the value should be removed Removes a meta value from a user or group.","title":"unset &lt;key&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#clear-scope","text":"Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the meta values should be cleared Clears all meta values form a user or group","title":"clear [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#list-scope","text":"Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all meta values of a user or group.","title":"list [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#tree-scope","text":"Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the meta tree of a player or group.","title":"tree [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#show-key-scope","text":"Permission: dkperms.admin Alias: s, get, g Arguments: <key> The meta key to show [scope] On which scope the meta value should be showed Show the current configuration of a meta value.","title":"show &lt;key&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/meta-commands/#check-key-scope","text":"Permission: dkperms.admin Alias: c, test Arguments: <key> The name of the meta key to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check which is the effected meta value (The check tests each level and gives feedback on the status).","title":"check &lt;key&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/","text":"Parent Commands \u00b6 This page describes the usage of DKPerms parent-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Normally you use groups as parent (parent = group) Index set <parent> [action] [duration] [scope] [modifier] add <parent> [action] [duration] [scope] [modifier] remove <parent> [scope] clear [scope] list [scope] tree [scope] show <parent> [scope] check <parent> [scope] set <parent> [action] [duration] [scope] [modifier] \u00b6 Permission: dkperms.admin Alias: s Arguments: <parent> The name of the parent [action] The action that should be used for this parent assignment [duration] The duration of how long the object should be in this group [scope] On which scope the group should be assigned [modifier] An action, what should happen if the object is already in this group This command sets a parent to a player, or a group, all assigned parents are removed from the player. Available actions: + Allow the player to the group (default) ++ Allow the player always to the group (Ignore hierarchy priorities) - Disallow the player to the group (negative) -- Disallow the player always to the group (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration. add <parent> [action] [duration] [scope] [modifier] \u00b6 Permission: dkperms.admin Alias: a Arguments: <parent> The name of the parent to add [action] The action that should be used for this parent assignment [duration] The duration of how long the object should be in this parent [scope] On which scope the parent should be assigned [modifier] An action, what should happen if the object is already in this group This command adds a parent to a player or group, all assigned parents are kept. Available actions: + Allow the player to the group (default) ++ Allow the player always to the group (Ignore hierarchy priorities) - Disallow the player to the group (negative) -- Disallow the player always to the group (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration. remove <parent> [scope] \u00b6 Permission: dkperms.admin Alias: c Arguments: <parent> The name of the parent to remove [scope] On which scope the group should be removed Remove an assigned parent from an object (user or group). clear [scope] \u00b6 Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the parents should be cleared Clear all parent of an object (user or group). list [scope] \u00b6 Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all parents (groups) of an object. tree [scope] \u00b6 Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the parent tree of a player or group. show <parent> [scope] \u00b6 Permission: dkperms.admin Alias: s, get, g Arguments: <parent> The name of the parent to show [scope] On which scope the parent should be showed Show the current assignment configuration of an assigned parent. check <parent> [scope] \u00b6 Permission: dkperms.admin Alias: c, test Arguments: <parent> The name of the parent to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check if an object gets permissions from an assigned parent (The check tests each level and gives feedback on the status).","title":"Parent Commands"},{"location":"dkperms/plugin-usage/commands/parent-commands/#parent-commands","text":"This page describes the usage of DKPerms parent-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Normally you use groups as parent (parent = group)","title":"Parent Commands"},{"location":"dkperms/plugin-usage/commands/parent-commands/#set-parent-action-duration-scope-modifier","text":"Permission: dkperms.admin Alias: s Arguments: <parent> The name of the parent [action] The action that should be used for this parent assignment [duration] The duration of how long the object should be in this group [scope] On which scope the group should be assigned [modifier] An action, what should happen if the object is already in this group This command sets a parent to a player, or a group, all assigned parents are removed from the player. Available actions: + Allow the player to the group (default) ++ Allow the player always to the group (Ignore hierarchy priorities) - Disallow the player to the group (negative) -- Disallow the player always to the group (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration.","title":"set &lt;parent&gt; [action] [duration] [scope] [modifier]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#add-parent-action-duration-scope-modifier","text":"Permission: dkperms.admin Alias: a Arguments: <parent> The name of the parent to add [action] The action that should be used for this parent assignment [duration] The duration of how long the object should be in this parent [scope] On which scope the parent should be assigned [modifier] An action, what should happen if the object is already in this group This command adds a parent to a player or group, all assigned parents are kept. Available actions: + Allow the player to the group (default) ++ Allow the player always to the group (Ignore hierarchy priorities) - Disallow the player to the group (negative) -- Disallow the player always to the group (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration.","title":"add &lt;parent&gt; [action] [duration] [scope] [modifier]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#remove-parent-scope","text":"Permission: dkperms.admin Alias: c Arguments: <parent> The name of the parent to remove [scope] On which scope the group should be removed Remove an assigned parent from an object (user or group).","title":"remove &lt;parent&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#clear-scope","text":"Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the parents should be cleared Clear all parent of an object (user or group).","title":"clear [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#list-scope","text":"Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all parents (groups) of an object.","title":"list [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#tree-scope","text":"Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the parent tree of a player or group.","title":"tree [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#show-parent-scope","text":"Permission: dkperms.admin Alias: s, get, g Arguments: <parent> The name of the parent to show [scope] On which scope the parent should be showed Show the current assignment configuration of an assigned parent.","title":"show &lt;parent&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/parent-commands/#check-parent-scope","text":"Permission: dkperms.admin Alias: c, test Arguments: <parent> The name of the parent to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check if an object gets permissions from an assigned parent (The check tests each level and gives feedback on the status).","title":"check &lt;parent&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/","text":"Permission Commands \u00b6 This page describes the usage of DKPerms permission-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index set <permission> [action] [duration] [scope] [modifier] unset <permission> [scope] clear [scope] list [scope] tree [scope] show <permission> [scope] check <permission> [scope] set <permission> [action] [duration] [scope] [modifier] \u00b6 Permission: dkperms.admin Alias: s, add, a Arguments: <permission> The permission to set [action] The action that should be used for this permission [duration] The duration of how long the object is permitted to this permission [scope] On which scope the permission should be assigned [modifier] An action, what should happen if the object already has this permission This command sets a permission to a player, or a group. Available actions: + Permits the player to this permission (default) ++ Permits the player always to this permission (Ignore hierarchy priorities) - Disallow the player to this permission(negative) -- Disallow the player always to this permission (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration. unset <permission> [scope] \u00b6 Permission: dkperms.admin Alias: u Arguments: <permission> The permission to unset [scope] On which scope the permission should be removed This command removes an assigned permission from a user or group. clear [scope] \u00b6 Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the permission should be removed Clear all permissions from a user or group. list [scope] \u00b6 Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all permissions of a user or group. tree [scope] \u00b6 Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the permission tree of a player or group. show <permission> [scope] \u00b6 Permission: dkperms.admin Alias: s, get, g Arguments: <permission> The name of the parent to show [scope] On which scope the permission should be showed Show the current assignment configuration of a permission. check <permission> [scope] \u00b6 Permission: dkperms.admin Alias: c, test Arguments: <permission> The name of the permission to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check if the permission is allowed or disallowed (The check tests each level and gives feedback on the status).","title":"Permission Commands"},{"location":"dkperms/plugin-usage/commands/permission-commands/#permission-commands","text":"This page describes the usage of DKPerms permission-commands . Those commands are sub commands of user and group commands. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"Permission Commands"},{"location":"dkperms/plugin-usage/commands/permission-commands/#set-permission-action-duration-scope-modifier","text":"Permission: dkperms.admin Alias: s, add, a Arguments: <permission> The permission to set [action] The action that should be used for this permission [duration] The duration of how long the object is permitted to this permission [scope] On which scope the permission should be assigned [modifier] An action, what should happen if the object already has this permission This command sets a permission to a player, or a group. Available actions: + Permits the player to this permission (default) ++ Permits the player always to this permission (Ignore hierarchy priorities) - Disallow the player to this permission(negative) -- Disallow the player always to this permission (Ignore hierarchy priorities) Available modifiers: r Replace the existing entry with the new configuration f Ignore and print an error message a accumulate the duration with the existing duration and keep the configuration. l Take the longest duration and keep the configuration.","title":"set &lt;permission&gt; [action] [duration] [scope] [modifier]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#unset-permission-scope","text":"Permission: dkperms.admin Alias: u Arguments: <permission> The permission to unset [scope] On which scope the permission should be removed This command removes an assigned permission from a user or group.","title":"unset &lt;permission&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#clear-scope","text":"Permission: dkperms.admin Alias: c Arguments: [scope] On which scope the permission should be removed Clear all permissions from a user or group.","title":"clear [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#list-scope","text":"Permission: dkperms.admin Alias: l Arguments: [scope] The scope to list List all permissions of a user or group.","title":"list [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#tree-scope","text":"Permission: dkperms.admin Alias: t Arguments: [scope] The scope to start (if missing, the root scope is taken). List the permission tree of a player or group.","title":"tree [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#show-permission-scope","text":"Permission: dkperms.admin Alias: s, get, g Arguments: <permission> The name of the parent to show [scope] On which scope the permission should be showed Show the current assignment configuration of a permission.","title":"show &lt;permission&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/permission-commands/#check-permission-scope","text":"Permission: dkperms.admin Alias: c, test Arguments: <permission> The name of the permission to check [scope] The lowest scope to be checked (if missing, the current scope is taken) Check if the permission is allowed or disallowed (The check tests each level and gives feedback on the status).","title":"check &lt;permission&gt; [scope]"},{"location":"dkperms/plugin-usage/commands/rank-commands/","text":"Rank Commands \u00b6","title":"Rank Commands"},{"location":"dkperms/plugin-usage/commands/rank-commands/#rank-commands","text":"","title":"Rank Commands"},{"location":"dkperms/plugin-usage/commands/track-commands/","text":"Track Commands \u00b6","title":"Track Commands"},{"location":"dkperms/plugin-usage/commands/track-commands/#track-commands","text":"","title":"Track Commands"},{"location":"dkperms/plugin-usage/commands/user-commands/","text":"User Commands \u00b6 This page describes the usage of DKPerms user commands. The user command always starts with /perms user <player> , while <player> is the name of the player. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example] Index /perms user <player> info /perms user <player> permission /perms user <player> meta /perms user <player> parent /perms user <player> info \u00b6 Permission: dkperms.admin Alias: i Shows information about the player and his primary groups. /perms user <player> permission ... \u00b6 Permission: dkperms.admin Alias: permissions, perm, perms, p Arguments: ... Sub commands, see Permission Commands With this command you can add, delete, change or list permissions of a player. You can find a more detailed explanation here . /perms user <player> meta ... \u00b6 Permission: dkperms.admin Alias: m Arguments: ... Sub commands, see Meta Commands With this command you can add, delete, change or list metadata of a player. You can find a more detailed explanation here . /perms user <player> parent ... \u00b6 Permission: dkperms.admin Alias: p, group, g Arguments: ... Sub commands, see Parent Commands With this command you can set, add, delete or list inherited groups (parents) of a player. You can find a more detailed explanation here .","title":"User Commands"},{"location":"dkperms/plugin-usage/commands/user-commands/#user-commands","text":"This page describes the usage of DKPerms user commands. The user command always starts with /perms user <player> , while <player> is the name of the player. Important things to remember: * Required arguments are declared with <example> * Optional arguments are declared with [example]","title":"User Commands"},{"location":"dkperms/plugin-usage/commands/user-commands/#perms-user-player-info","text":"Permission: dkperms.admin Alias: i Shows information about the player and his primary groups.","title":"/perms user &lt;player&gt; info"},{"location":"dkperms/plugin-usage/commands/user-commands/#perms-user-player-permission","text":"Permission: dkperms.admin Alias: permissions, perm, perms, p Arguments: ... Sub commands, see Permission Commands With this command you can add, delete, change or list permissions of a player. You can find a more detailed explanation here .","title":"/perms user &lt;player&gt; permission ..."},{"location":"dkperms/plugin-usage/commands/user-commands/#perms-user-player-meta","text":"Permission: dkperms.admin Alias: m Arguments: ... Sub commands, see Meta Commands With this command you can add, delete, change or list metadata of a player. You can find a more detailed explanation here .","title":"/perms user &lt;player&gt; meta ..."},{"location":"dkperms/plugin-usage/commands/user-commands/#perms-user-player-parent","text":"Permission: dkperms.admin Alias: p, group, g Arguments: ... Sub commands, see Parent Commands With this command you can set, add, delete or list inherited groups (parents) of a player. You can find a more detailed explanation here .","title":"/perms user &lt;player&gt; parent ..."}]}