{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Overview"},{"location":"dkperms/","text":"Introduction \u00b6 DKPerms is a high configurable Minecraft permission system with a lot of features and this is the official wiki of the DKPerms project. Here you will find a complete documentation how to administrate, install and setup DKPerms. DKPerms is maintained by Pretronic and was first released in July 2018. DKPerms is a reliable permission system and has been optimized and improved over time. Features \u00b6 Platform & Environment Running on Spigot and BungeeCord Minecraft 1.8 - 1.16 support H2 (SQLite), MySQL, MariaDB, PostgreSQL, MS-SQL and MongoDB support Everything is configurable and customizable Live update over a network High performance and caching architecture Permissions Temporary and negative permissions Assign to different scopes Per world permissions Per server permissions Per server group permissions Groups Temporary and negative groups Default groups Inheritance groups Group priorities for ranking and promotion Tracks for creating group orders Assign to different scopes Per world groups Per server groups Per server group groups Integrations Placeholders for PlaceholderAPI Vault permission and chat support CloudNet V2 & V3 support (Multi proxy) Additional features Simplified /rank command for assigning groups /team command for listing your team members. Tablist & Chat (live update) Offline player support Tree based structure Migration functionality Big developer api Support \u00b6 DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ License \u00b6","title":"Introduction"},{"location":"dkperms/#introduction","text":"DKPerms is a high configurable Minecraft permission system with a lot of features and this is the official wiki of the DKPerms project. Here you will find a complete documentation how to administrate, install and setup DKPerms. DKPerms is maintained by Pretronic and was first released in July 2018. DKPerms is a reliable permission system and has been optimized and improved over time.","title":"Introduction"},{"location":"dkperms/#features","text":"Platform & Environment Running on Spigot and BungeeCord Minecraft 1.8 - 1.16 support H2 (SQLite), MySQL, MariaDB, PostgreSQL, MS-SQL and MongoDB support Everything is configurable and customizable Live update over a network High performance and caching architecture Permissions Temporary and negative permissions Assign to different scopes Per world permissions Per server permissions Per server group permissions Groups Temporary and negative groups Default groups Inheritance groups Group priorities for ranking and promotion Tracks for creating group orders Assign to different scopes Per world groups Per server groups Per server group groups Integrations Placeholders for PlaceholderAPI Vault permission and chat support CloudNet V2 & V3 support (Multi proxy) Additional features Simplified /rank command for assigning groups /team command for listing your team members. Tablist & Chat (live update) Offline player support Tree based structure Migration functionality Big developer api","title":"Features"},{"location":"dkperms/#support","text":"DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ","title":"Support"},{"location":"dkperms/#license","text":"","title":"License"},{"location":"dkperms/defintions/","text":"Definitions \u00b6 This page describes the key definitions and the structure of DKPerms. It is very important that you understand these things before you start using DKPerms. Permissions \u00b6 Every plugin installed on your server usually brings its own permissions, these permissions are required to restrict commands and features to different users and groups. These permissions allow you to control which user has access to a command or feature. The permission node is a sequence of letters and is provided by the respective plugin author. For example, to ban ( /ban dkrieger hacking ) a user with DKBans the permission dkbans.ban is required. Meta \u00b6 The meta is a key value based information that can be set to groups and users. Unlike permissions, the meta contains a value that can be read by another plugin. For example, you might want to display a prefix before the player name in the tab list, so you can set a meta entry with the key prefix and your value. Groups (Permission groups) \u00b6 Usually different players have the same permission. In this case DKPerms has groups, which you can give permissions, metas and other groups, later on you can assign this group to different players. For example, you can create a moderator group, which contains permissions for banning, kicking and teleport. When now a new moderator joins your team, you can easily assign the moderator group to him/her, and he/she will automatically get necessary permissions. Server Groups \u00b6 A server group is a collection of different servers, every server is automatically in a server group the name of the group is the first part of the group separator ( - ) defined in the configuration For example, you have a different SkyWars servers called: * SkyWars-1 * SkyWars-2 * SkyWars-3 The server group for these servers is called SkyWars , if you now need the same permissions on all skywars servers, it is much easier to assign the permission to the server group instead to each server. Scope \u00b6 DKPerms is based on a tree structure, everything in DKPerms (Objects, permissions, groups etc.) belongs to a scope and is only valid for this and all subordinate scopes. This example shows how a tree can look like: Nemspace=Minecraft ServerGroup=Lobby Server=Lobby-1 World=World-1 Server=Lobby-2 If the permission dkbans.ban is assigned to a player on the scope Nemspace=Minecraft\\\\ServerGroup=Lobby the permission is valid on Lobby-1 and Lobby-2 . Permission Object \u00b6 A PermissionObject holds permission data and can be a group, user or a custom type. Objects are registered in DKPerms and assigned to a third-party resource.","title":"Defintions"},{"location":"dkperms/defintions/#definitions","text":"This page describes the key definitions and the structure of DKPerms. It is very important that you understand these things before you start using DKPerms.","title":"Definitions"},{"location":"dkperms/defintions/#permissions","text":"Every plugin installed on your server usually brings its own permissions, these permissions are required to restrict commands and features to different users and groups. These permissions allow you to control which user has access to a command or feature. The permission node is a sequence of letters and is provided by the respective plugin author. For example, to ban ( /ban dkrieger hacking ) a user with DKBans the permission dkbans.ban is required.","title":"Permissions"},{"location":"dkperms/defintions/#meta","text":"The meta is a key value based information that can be set to groups and users. Unlike permissions, the meta contains a value that can be read by another plugin. For example, you might want to display a prefix before the player name in the tab list, so you can set a meta entry with the key prefix and your value.","title":"Meta"},{"location":"dkperms/defintions/#groups-permission-groups","text":"Usually different players have the same permission. In this case DKPerms has groups, which you can give permissions, metas and other groups, later on you can assign this group to different players. For example, you can create a moderator group, which contains permissions for banning, kicking and teleport. When now a new moderator joins your team, you can easily assign the moderator group to him/her, and he/she will automatically get necessary permissions.","title":"Groups (Permission groups)"},{"location":"dkperms/defintions/#server-groups","text":"A server group is a collection of different servers, every server is automatically in a server group the name of the group is the first part of the group separator ( - ) defined in the configuration For example, you have a different SkyWars servers called: * SkyWars-1 * SkyWars-2 * SkyWars-3 The server group for these servers is called SkyWars , if you now need the same permissions on all skywars servers, it is much easier to assign the permission to the server group instead to each server.","title":"Server Groups"},{"location":"dkperms/defintions/#scope","text":"DKPerms is based on a tree structure, everything in DKPerms (Objects, permissions, groups etc.) belongs to a scope and is only valid for this and all subordinate scopes. This example shows how a tree can look like: Nemspace=Minecraft ServerGroup=Lobby Server=Lobby-1 World=World-1 Server=Lobby-2 If the permission dkbans.ban is assigned to a player on the scope Nemspace=Minecraft\\\\ServerGroup=Lobby the permission is valid on Lobby-1 and Lobby-2 .","title":"Scope"},{"location":"dkperms/defintions/#permission-object","text":"A PermissionObject holds permission data and can be a group, user or a custom type. Objects are registered in DKPerms and assigned to a third-party resource.","title":"Permission Object"},{"location":"dkperms/frequently-asked-questions/","text":"Frequently Asked Questions \u00b6 this page contains some questions which are frequently asked about DKPerms. Before you ask a question in our support, please check this page and make sure that the question is not already answered. How can I create a default group? \u00b6 DKPerms handles default groups in its meta. You can set a group as default on the whole network or on a specified server. If you set the meta default to true of a group, all players will automatically gets all permissions of the group, but the group is not directly assigned to the player. If you want set a group to each player when he joined the server, you can set the meta ``defaultAssign to true```, so every new player automatically receives this group. Examples /perms group <group> meta set default true /perms group <group> meta set defaultAsign true /perms group <group> meta set default true world=world-1 In this case the group is only default on world-1","title":"FAQ"},{"location":"dkperms/frequently-asked-questions/#frequently-asked-questions","text":"this page contains some questions which are frequently asked about DKPerms. Before you ask a question in our support, please check this page and make sure that the question is not already answered.","title":"Frequently Asked Questions"},{"location":"dkperms/frequently-asked-questions/#how-can-i-create-a-default-group","text":"DKPerms handles default groups in its meta. You can set a group as default on the whole network or on a specified server. If you set the meta default to true of a group, all players will automatically gets all permissions of the group, but the group is not directly assigned to the player. If you want set a group to each player when he joined the server, you can set the meta ``defaultAssign to true```, so every new player automatically receives this group. Examples /perms group <group> meta set default true /perms group <group> meta set defaultAsign true /perms group <group> meta set default true world=world-1 In this case the group is only default on world-1","title":"How can I create a default group?"},{"location":"dkperms/support/","text":"Support \u00b6 DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ Bug reports \u00b6 Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. __**Template:**__ **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit (CloudNet) **Storage**: SQLite **Server Version / Build**: 1402 **Client Version**: 1.8 **Logs / Images** gist.github.com (Recommended) hastebin.com imgur.com/upload **Description** A clear description of the bug and when he occurs. **To Reproduce** What we have to do, to trigger the bug? 1. Ban a player with /ban 2. Join the server Suggestions \u00b6 If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion in the #suggestions channel on our Discord server. Make sure your suggestion is understandable and that the following template is used. __**Template:**__ **Project**: DKBans | DKPerms | etc. **Description:** A detailed description of the suggestion. **Usage: ** The usage, for what you can use this feature and why it is so useful. **Example:** A example, how this feature should work.","title":"Developer API"},{"location":"dkperms/support/#support","text":"DKPerms support is offered by our Team and community via Discord to all DKPerms buyers. All supporters do this voluntarily and answer as soon as possible. Before you ask, please try to solve the problem by yourself with the help of this wiki. -> Checkout the FAQ","title":"Support"},{"location":"dkperms/support/#bug-reports","text":"Before you create a bug report, make sure it is not a configuration issue, or a not supported feature. If you are sure it must be a bug, create a new post in the #bug-reports channel on our Discord and provide us as much information as possible (Including your plugins and server logs). Make sure you use the following template to create your report, otherwise we will delete your report and are not able to fix the issue. __**Template:**__ **Project:** DKBans | DKPerms | etc. **Version**: 2.0.3 **Platform**: BungeeCord / Bukkit (CloudNet) **Storage**: SQLite **Server Version / Build**: 1402 **Client Version**: 1.8 **Logs / Images** gist.github.com (Recommended) hastebin.com imgur.com/upload **Description** A clear description of the bug and when he occurs. **To Reproduce** What we have to do, to trigger the bug? 1. Ban a player with /ban 2. Join the server","title":"Bug reports"},{"location":"dkperms/support/#suggestions","text":"If you have a great idea that should be implemented in DKPerms. Feel free to create a suggestion in the #suggestions channel on our Discord server. Make sure your suggestion is understandable and that the following template is used. __**Template:**__ **Project**: DKBans | DKPerms | etc. **Description:** A detailed description of the suggestion. **Usage: ** The usage, for what you can use this feature and why it is so useful. **Example:** A example, how this feature should work.","title":"Suggestions"},{"location":"dkperms/plugin-setup/installation/","text":"","title":"Installation"},{"location":"dkperms/plugin-usage/placeholders/","text":"Placeholders \u00b6 DKPerms offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKPerms placeholders are available in all McNative supported placeholder sources (PlaceholderAPI). %dkperms_name% %dkperms_uniqueId% %dkperms_id% %dkperms_scope% %dkperms_rank% %dkperms_ranks% %dkperms_color% %dkperms_prefix% %dkperms_suffix% %dkperms_display% %dkperms_priority% %dkperms_team% %dkperms_priority% %dkperms_property_ % %dkperms_boolProperty_ % %dkperms_numberProperty_ %","title":"Placeholders"},{"location":"dkperms/plugin-usage/placeholders/#placeholders","text":"DKPerms offers many placeholders which can be used in other plugins to display data provided by DKPerms. DKPerms placeholders are available in all McNative supported placeholder sources (PlaceholderAPI). %dkperms_name% %dkperms_uniqueId% %dkperms_id% %dkperms_scope% %dkperms_rank% %dkperms_ranks% %dkperms_color% %dkperms_prefix% %dkperms_suffix% %dkperms_display% %dkperms_priority% %dkperms_team% %dkperms_priority% %dkperms_property_ % %dkperms_boolProperty_ % %dkperms_numberProperty_ %","title":"Placeholders"},{"location":"dkperms/plugin-usage/commands/","text":"Commands \u00b6 This page describes all available commands to operate DKPerms from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ... General commands \u00b6 These commands are used to operate DKPerms on your network or server. /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse User commands \u00b6 These commands are for manging user permissions, groups and metadata. <player> The name or unique id of the player. /perms user <player> info /perms user <player> permission /perms user <player> meta /perms user <player> parent Group commands \u00b6 Commands for manging groups. <group> is the name of the group. /perms group <group> info /perms group <group> create /perms group <group> delete /perms group <group> rename <newName> /perms group <group> copy <newName> /perms group <group> members [scope] [page] /perms group <group> permission /perms group <group> meta /perms group <group> group /perms group <group> setPriority <priorit> Permission commands \u00b6 permission list [scope] permission tree permission show <permission> [scope] permission set <permission> [action] [duration] [scope] [modifier] permission unset <permission> [scope] permission clear [scope] permission check <permission> [scope] Meta commands \u00b6 meta list [scope] meta tree meta show <key> [scope] meta set <key> <value> [duration] [scope] meta unset <key> [scope] meta clear [scope] meta check <key> [scope] Group / Parent commands group list [scope] group tree group show <group> [scope] group set <group> [action] [duration] [scope] [modifier] group add <group> [action] [duration] [scope] [modifier] group remove <group> [scope] group clear [scope] group check <key> [scope]","title":"Overview"},{"location":"dkperms/plugin-usage/commands/#commands","text":"This page describes all available commands to operate DKPerms from the player chat and console. Important things to remember about commands: * Required arguments are declared with <example> * Optional arguments are declared with [example] * Sub commands documented on another page are declared with ...","title":"Commands"},{"location":"dkperms/plugin-usage/commands/#general-commands","text":"These commands are used to operate DKPerms on your network or server. /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse","title":"General commands"},{"location":"dkperms/plugin-usage/commands/#user-commands","text":"These commands are for manging user permissions, groups and metadata. <player> The name or unique id of the player. /perms user <player> info /perms user <player> permission /perms user <player> meta /perms user <player> parent","title":"User commands"},{"location":"dkperms/plugin-usage/commands/#group-commands","text":"Commands for manging groups. <group> is the name of the group. /perms group <group> info /perms group <group> create /perms group <group> delete /perms group <group> rename <newName> /perms group <group> copy <newName> /perms group <group> members [scope] [page] /perms group <group> permission /perms group <group> meta /perms group <group> group /perms group <group> setPriority <priorit>","title":"Group commands"},{"location":"dkperms/plugin-usage/commands/#permission-commands","text":"permission list [scope] permission tree permission show <permission> [scope] permission set <permission> [action] [duration] [scope] [modifier] permission unset <permission> [scope] permission clear [scope] permission check <permission> [scope]","title":"Permission commands"},{"location":"dkperms/plugin-usage/commands/#meta-commands","text":"meta list [scope] meta tree meta show <key> [scope] meta set <key> <value> [duration] [scope] meta unset <key> [scope] meta clear [scope] meta check <key> [scope]","title":"Meta commands"},{"location":"dkperms/plugin-usage/commands/general-commands/","text":"General Commands \u00b6 This page describes the usage and permissions of the DKPerms general commands. Index /perms /perms info /perms sync /perms migrate /perms groups /perms group <group> /perms user <user> /perms track <track> /perms analyse /perms \u00b6 Permission: dkperms.admin This is the base command of DKPerms. It is use for administrating the whole DKPerms permission system on your network. If you don't have access to this command, the plugin version and author is displayed. /perms info \u00b6 Permission: dkperms.admin Alias: information, i, version, v Shows information about the current installed plugin, like the version and author. /perms sync \u00b6 Permission: dkperms.admin Alias: synchronize, s Synchronizes permissions, groups, users and metadata a cross multiple server in a network. /perms migrate <system> \u00b6 Permission: dkperms.admin Alias: migration, m Arguments: * <system> The system to migrate (DKPermsLegacy, PermissionEx etc.) Imports permissions and groups from other permission systems or older DKPerms versions. You can find a more detailed explanation here . /perms groups \u00b6 Permission: dkperms.admin Lists all available groups sorted by priority. /perms group <group> ... \u00b6 Permission: dkperms.admin Alias: g Arguments: * <group> The name of the group * ... Optional sub commands, see Permission Group Commands Shows information about the targeted group and is used for managing groups. You can find a more detailed explanation here . /perms user <player> ... \u00b6 Permission: dkperms.admin Alias: u, player, p Arguments: * <player> The name of the player * ... Optional sub commands, see User Commands Shows information about the targeted group and is used for managing players. You can find a more detailed explanation here . /perms track <track> ... \u00b6 Permission: dkperms.admin Alias: t Arguments: * <track> The name of the track * ... Optional sub commands, see Track Commands Shows information about the targeted track and is used for managing tracks. You can find a more detailed explanation here . /perms analyse <action> \u00b6 Permission: dkperms.admin Arguments: * <action> The action to perform Helps debugging permissions problems on your server Available actions: * on Enables permission analysing and printing * off Disables permission analysing and printing * join Joins the player into the printing listener to receive permission debug prints * leave Removed the player from the printing listener","title":"General Commands"},{"location":"dkperms/plugin-usage/commands/general-commands/#general-commands","text":"This page describes the usage and permissions of the DKPerms general commands.","title":"General Commands"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms","text":"Permission: dkperms.admin This is the base command of DKPerms. It is use for administrating the whole DKPerms permission system on your network. If you don't have access to this command, the plugin version and author is displayed.","title":"/perms"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-info","text":"Permission: dkperms.admin Alias: information, i, version, v Shows information about the current installed plugin, like the version and author.","title":"/perms info"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-sync","text":"Permission: dkperms.admin Alias: synchronize, s Synchronizes permissions, groups, users and metadata a cross multiple server in a network.","title":"/perms sync"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-migrate-system","text":"Permission: dkperms.admin Alias: migration, m Arguments: * <system> The system to migrate (DKPermsLegacy, PermissionEx etc.) Imports permissions and groups from other permission systems or older DKPerms versions. You can find a more detailed explanation here .","title":"/perms migrate &lt;system&gt;"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-groups","text":"Permission: dkperms.admin Lists all available groups sorted by priority.","title":"/perms groups"},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-group-group","text":"Permission: dkperms.admin Alias: g Arguments: * <group> The name of the group * ... Optional sub commands, see Permission Group Commands Shows information about the targeted group and is used for managing groups. You can find a more detailed explanation here .","title":"/perms group &lt;group&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-user-player","text":"Permission: dkperms.admin Alias: u, player, p Arguments: * <player> The name of the player * ... Optional sub commands, see User Commands Shows information about the targeted group and is used for managing players. You can find a more detailed explanation here .","title":"/perms user &lt;player&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-track-track","text":"Permission: dkperms.admin Alias: t Arguments: * <track> The name of the track * ... Optional sub commands, see Track Commands Shows information about the targeted track and is used for managing tracks. You can find a more detailed explanation here .","title":"/perms track &lt;track&gt; ..."},{"location":"dkperms/plugin-usage/commands/general-commands/#perms-analyse-action","text":"Permission: dkperms.admin Arguments: * <action> The action to perform Helps debugging permissions problems on your server Available actions: * on Enables permission analysing and printing * off Disables permission analysing and printing * join Joins the player into the printing listener to receive permission debug prints * leave Removed the player from the printing listener","title":"/perms analyse &lt;action&gt;"}]}